cscope 15 $HOME/Smart-Patrol/camera               0000246534
	@capture.c

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~<°rög.h
>

13 
	~<as£π.h
>

15 
	~<gë›t.h
>

17 
	~<f˙é.h
>

18 
	~<uni°d.h
>

19 
	~<î∫o.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/time.h
>

23 
	~<sys/mm™.h
>

24 
	~<sys/io˘l.h
>

26 
	~<löux/videodev2.h
>

28 
	#CLEAR
(
x
Ë
	`mem£t
(&(x), 0, (x))

	)

30 
	eio_mëhod
 {

31 
	mIO_METHOD_READ
,

32 
	mIO_METHOD_MMAP
,

33 
	mIO_METHOD_USERPTR
,

36 
	sbuf„r
 {

37 *
	m°¨t
;

38 
size_t
 
	mÀngth
;

41 *
	gdev_«me
;

42 
io_mëhod
 
	gio
 = 
IO_METHOD_MMAP
;

43 
	gfd
 = -1;

44 
buf„r
 *
	gbuf„rs
;

45 
	gn_buf„rs
;

46 
	gout_buf
;

47 
	gf‹˚_f‹m©
;

48 
	g‰ame_cou¡
 = 70;

50 
	$î∫o_exô
(c⁄° *
s
)

52 
	`Ârötf
(
°dîr
, "%†îr‹ %d, %s\\n", 
s
, 
î∫o
, 
	`°ªº‹
(errno));

53 
	`exô
(
EXIT_FAILURE
);

54 
	}
}

56 
	$xio˘l
(
fh
, 
ªque°
, *
¨g
)

58 
r
;

61 
r
 = 
	`io˘l
(
fh
, 
ªque°
, 
¨g
);

62 } -1 =
r
 && 
EINTR
 =
î∫o
);

64  
r
;

65 
	}
}

67 
	$¥o˚ss_image
(c⁄° *
p
, 
size
)

69 i‡(
out_buf
)

70 
	`fwrôe
(
p
, 
size
, 1, 
°dout
);

72 
	`fÊush
(
°dîr
);

73 
	`Ârötf
(
°dîr
, ".");

74 
	`fÊush
(
°dout
);

75 
	}
}

77 
	$ªad_‰ame
()

79 
v4l2_buf„r
 
buf
;

80 
i
;

82 
io
) {

83 
IO_METHOD_READ
:

84 i‡(-1 =
	`ªad
(
fd
, 
buf„rs
[0].
°¨t
, buf„rs[0].
Àngth
)) {

85 
î∫o
) {

86 
EAGAIN
:

89 
EIO
:

95 
	`î∫o_exô
("read");

99 
	`¥o˚ss_image
(
buf„rs
[0].
°¨t
, buf„rs[0].
Àngth
);

102 
IO_METHOD_MMAP
:

103 
	`CLEAR
(
buf
);

105 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

106 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

108 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_DQBUF
, &
buf
)) {

109 
î∫o
) {

110 
EAGAIN
:

113 
EIO
:

119 
	`î∫o_exô
("VIDIOC_DQBUF");

123 
	`as£π
(
buf
.
ödex
 < 
n_buf„rs
);

125 
	`¥o˚ss_image
(
buf„rs
[
buf
.
ödex
].
°¨t
, buf.
byãsu£d
);

127 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
))

128 
	`î∫o_exô
("VIDIOC_QBUF");

131 
IO_METHOD_USERPTR
:

132 
	`CLEAR
(
buf
);

134 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

135 
buf
.
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

137 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_DQBUF
, &
buf
)) {

138 
î∫o
) {

139 
EAGAIN
:

142 
EIO
:

148 
	`î∫o_exô
("VIDIOC_DQBUF");

152 
i
 = 0; i < 
n_buf„rs
; ++i)

153 i‡(
buf
.
m
.
u£Ωå
 =()
buf„rs
[
i
].
°¨t


154 && 
buf
.
Àngth
 =
buf„rs
[
i
].length)

157 
	`as£π
(
i
 < 
n_buf„rs
);

159 
	`¥o˚ss_image
((*)
buf
.
m
.
u£Ωå
, buf.
byãsu£d
);

161 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
))

162 
	`î∫o_exô
("VIDIOC_QBUF");

167 
	}
}

169 
	$maölo›
()

171 
cou¡
;

173 
cou¡
 = 
‰ame_cou¡
;

175 
cou¡
-- > 0) {

177 
fd_£t
 
fds
;

178 
timevÆ
 
tv
;

179 
r
;

181 
	`FD_ZERO
(&
fds
);

182 
	`FD_SET
(
fd
, &
fds
);

185 
tv
.
tv_£c
 = 2;

186 
tv
.
tv_u£c
 = 0;

188 
r
 = 
	`£À˘
(
fd
 + 1, &
fds
, 
NULL
, NULL, &
tv
);

190 i‡(-1 =
r
) {

191 i‡(
EINTR
 =
î∫o
)

193 
	`î∫o_exô
("select");

196 i‡(0 =
r
) {

197 
	`Ârötf
(
°dîr
, "selectÅimeout\\n");

198 
	`exô
(
EXIT_FAILURE
);

201 i‡(
	`ªad_‰ame
())

206 
	}
}

208 
	$°›_ˇ±urög
()

210 
v4l2_buf_ty≥
 
ty≥
;

212 
io
) {

213 
IO_METHOD_READ
:

217 
IO_METHOD_MMAP
:

218 
IO_METHOD_USERPTR
:

219 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

220 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMOFF
, &
ty≥
))

221 
	`î∫o_exô
("VIDIOC_STREAMOFF");

224 
	}
}

226 
	$°¨t_ˇ±urög
()

228 
i
;

229 
v4l2_buf_ty≥
 
ty≥
;

231 
io
) {

232 
IO_METHOD_READ
:

236 
IO_METHOD_MMAP
:

237 
i
 = 0; i < 
n_buf„rs
; ++i) {

238 
v4l2_buf„r
 
buf
;

240 
	`CLEAR
(
buf
);

241 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

242 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

243 
buf
.
ödex
 = 
i
;

245 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
))

246 
	`î∫o_exô
("VIDIOC_QBUF");

248 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

249 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMON
, &
ty≥
))

250 
	`î∫o_exô
("VIDIOC_STREAMON");

253 
IO_METHOD_USERPTR
:

254 
i
 = 0; i < 
n_buf„rs
; ++i) {

255 
v4l2_buf„r
 
buf
;

257 
	`CLEAR
(
buf
);

258 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

259 
buf
.
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

260 
buf
.
ödex
 = 
i
;

261 
buf
.
m
.
u£Ωå
 = ()
buf„rs
[
i
].
°¨t
;

262 
buf
.
Àngth
 = 
buf„rs
[
i
].length;

264 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
))

265 
	`î∫o_exô
("VIDIOC_QBUF");

267 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

268 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_STREAMON
, &
ty≥
))

269 
	`î∫o_exô
("VIDIOC_STREAMON");

272 
	}
}

274 
	$unöô_devi˚
()

276 
i
;

278 
io
) {

279 
IO_METHOD_READ
:

280 
	`‰ì
(
buf„rs
[0].
°¨t
);

283 
IO_METHOD_MMAP
:

284 
i
 = 0; i < 
n_buf„rs
; ++i)

285 i‡(-1 =
	`munm≠
(
buf„rs
[
i
].
°¨t
, buf„rs[i].
Àngth
))

286 
	`î∫o_exô
("munmap");

289 
IO_METHOD_USERPTR
:

290 
i
 = 0; i < 
n_buf„rs
; ++i)

291 
	`‰ì
(
buf„rs
[
i
].
°¨t
);

295 
	`‰ì
(
buf„rs
);

296 
	}
}

298 
	$öô_ªad
(
buf„r_size
)

300 
buf„rs
 = 
	`ˇŒoc
(1, (*buffers));

302 i‡(!
buf„rs
) {

303 
	`Ârötf
(
°dîr
, "Out of memory\\n");

304 
	`exô
(
EXIT_FAILURE
);

307 
buf„rs
[0].
Àngth
 = 
buf„r_size
;

308 
buf„rs
[0].
°¨t
 = 
	`mÆloc
(
buf„r_size
);

310 i‡(!
buf„rs
[0].
°¨t
) {

311 
	`Ârötf
(
°dîr
, "Out of memory\\n");

312 
	`exô
(
EXIT_FAILURE
);

314 
	}
}

316 
	$öô_mm≠
()

318 
v4l2_ªque°buf„rs
 
ªq
;

320 
	`CLEAR
(
ªq
);

322 
ªq
.
cou¡
 = 4;

323 
ªq
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

324 
ªq
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

326 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_REQBUFS
, &
ªq
)) {

327 i‡(
EINVAL
 =
î∫o
) {

328 
	`Ârötf
(
°dîr
, "%s doesÇot support "

329 "mem‹y m≠pögn", 
dev_«me
);

330 
	`exô
(
EXIT_FAILURE
);

332 
	`î∫o_exô
("VIDIOC_REQBUFS");

336 i‡(
ªq
.
cou¡
 < 2) {

337 
	`Ârötf
(
°dîr
, "Insufficient buffer memory on %s\\n",

338 
dev_«me
);

339 
	`exô
(
EXIT_FAILURE
);

342 
buf„rs
 = 
	`ˇŒoc
(
ªq
.
cou¡
, (*buffers));

344 i‡(!
buf„rs
) {

345 
	`Ârötf
(
°dîr
, "Out of memory\\n");

346 
	`exô
(
EXIT_FAILURE
);

349 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
; ++n_buffers) {

350 
v4l2_buf„r
 
buf
;

352 
	`CLEAR
(
buf
);

354 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

355 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

356 
buf
.
ödex
 = 
n_buf„rs
;

358 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QUERYBUF
, &
buf
))

359 
	`î∫o_exô
("VIDIOC_QUERYBUF");

361 
buf„rs
[
n_buf„rs
].
Àngth
 = 
buf
.length;

362 
buf„rs
[
n_buf„rs
].
°¨t
 =

363 
	`mm≠
(
NULL
 ,

364 
buf
.
Àngth
,

365 
PROT_READ
 | 
PROT_WRITE
 ,

366 
MAP_SHARED
 ,

367 
fd
, 
buf
.
m
.
off£t
);

369 i‡(
MAP_FAILED
 =
buf„rs
[
n_buf„rs
].
°¨t
)

370 
	`î∫o_exô
("mmap");

372 
	}
}

374 
	$öô_u£Ω
(
buf„r_size
)

376 
v4l2_ªque°buf„rs
 
ªq
;

378 
	`CLEAR
(
ªq
);

380 
ªq
.
cou¡
 = 4;

381 
ªq
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

382 
ªq
.
mem‹y
 = 
V4L2_MEMORY_USERPTR
;

384 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_REQBUFS
, &
ªq
)) {

385 i‡(
EINVAL
 =
î∫o
) {

386 
	`Ârötf
(
°dîr
, "%s doesÇot support "

387 "u£∏poöã∏i/⁄", 
dev_«me
);

388 
	`exô
(
EXIT_FAILURE
);

390 
	`î∫o_exô
("VIDIOC_REQBUFS");

394 
buf„rs
 = 
	`ˇŒoc
(4, (*buffers));

396 i‡(!
buf„rs
) {

397 
	`Ârötf
(
°dîr
, "Out of memory\\n");

398 
	`exô
(
EXIT_FAILURE
);

401 
n_buf„rs
 = 0;Ç_buffers < 4; ++n_buffers) {

402 
buf„rs
[
n_buf„rs
].
Àngth
 = 
buf„r_size
;

403 
buf„rs
[
n_buf„rs
].
°¨t
 = 
	`mÆloc
(
buf„r_size
);

405 i‡(!
buf„rs
[
n_buf„rs
].
°¨t
) {

406 
	`Ârötf
(
°dîr
, "Out of memory\\n");

407 
	`exô
(
EXIT_FAILURE
);

410 
	}
}

412 
	$öô_devi˚
()

414 
v4l2_ˇ∑bûôy
 
ˇp
;

415 
v4l2_¸›ˇp
 
¸›ˇp
;

416 
v4l2_¸›
 
¸›
;

417 
v4l2_f‹m©
 
fmt
;

418 
mö
;

420 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_QUERYCAP
, &
ˇp
)) {

421 i‡(
EINVAL
 =
î∫o
) {

422 
	`Ârötf
(
°dîr
, "%s isÇo V4L2 device\\n",

423 
dev_«me
);

424 
	`exô
(
EXIT_FAILURE
);

426 
	`î∫o_exô
("VIDIOC_QUERYCAP");

430 i‡(!(
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
)) {

431 
	`Ârötf
(
°dîr
, "%s isÇo video capture device\\n",

432 
dev_«me
);

433 
	`exô
(
EXIT_FAILURE
);

436 
io
) {

437 
IO_METHOD_READ
:

438 i‡(!(
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_READWRITE
)) {

439 
	`Ârötf
(
°dîr
, "%s doesÇot supportÑead i/o\\n",

440 
dev_«me
);

441 
	`exô
(
EXIT_FAILURE
);

445 
IO_METHOD_MMAP
:

446 
IO_METHOD_USERPTR
:

447 i‡(!(
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
)) {

448 
	`Ârötf
(
°dîr
, "%s doesÇot support streaming i/o\\n",

449 
dev_«me
);

450 
	`exô
(
EXIT_FAILURE
);

459 
	`CLEAR
(
¸›ˇp
);

461 
¸›ˇp
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

463 i‡(0 =
	`xio˘l
(
fd
, 
VIDIOC_CROPCAP
, &
¸›ˇp
)) {

464 
¸›
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

465 
¸›
.
c
 = 
¸›ˇp
.
de‰e˘
;

467 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_S_CROP
, &
¸›
)) {

468 
î∫o
) {

469 
EINVAL
:

482 
	`CLEAR
(
fmt
);

484 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

485 i‡(
f‹˚_f‹m©
) {

486 
fmt
.fmt.
pix
.
width
 = 640;

487 
fmt
.fmt.
pix
.
height
 = 480;

488 
fmt
.fmt.
pix
.
pixñf‹m©
 = 
V4L2_PIX_FMT_YUYV
;

489 
fmt
.fmt.
pix
.
fõld
 = 
V4L2_FIELD_INTERLACED
;

491 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_S_FMT
, &
fmt
))

492 
	`î∫o_exô
("VIDIOC_S_FMT");

497 i‡(-1 =
	`xio˘l
(
fd
, 
VIDIOC_G_FMT
, &
fmt
))

498 
	`î∫o_exô
("VIDIOC_G_FMT");

502 
mö
 = 
fmt
.fmt.
pix
.
width
 * 2;

503 i‡(
fmt
.fmt.
pix
.
byã•îlöe
 < 
mö
)

504 
fmt
.fmt.
pix
.
byã•îlöe
 = 
mö
;

505 
mö
 = 
fmt
.fmt.
pix
.
byã•îlöe
 * fmt.fmt.pix.
height
;

506 i‡(
fmt
.fmt.
pix
.
sizeimage
 < 
mö
)

507 
fmt
.fmt.
pix
.
sizeimage
 = 
mö
;

509 
io
) {

510 
IO_METHOD_READ
:

511 
	`öô_ªad
(
fmt
.fmt.
pix
.
sizeimage
);

514 
IO_METHOD_MMAP
:

515 
	`öô_mm≠
();

518 
IO_METHOD_USERPTR
:

519 
	`öô_u£Ω
(
fmt
.fmt.
pix
.
sizeimage
);

522 
	}
}

524 
	$˛o£_devi˚
()

526 i‡(-1 =
	`˛o£
(
fd
))

527 
	`î∫o_exô
("close");

529 
fd
 = -1;

530 
	}
}

532 
	$›í_devi˚
()

534 
°©
 
°
;

536 i‡(-1 =
	`°©
(
dev_«me
, &
°
)) {

537 
	`Ârötf
(
°dîr
, "Cannot identify '%s': %d, %s\\n",

538 
dev_«me
, 
î∫o
, 
	`°ªº‹
(errno));

539 
	`exô
(
EXIT_FAILURE
);

542 i‡(!
	`S_ISCHR
(
°
.
°_mode
)) {

543 
	`Ârötf
(
°dîr
, "%†i†nÿdevi˚n", 
dev_«me
);

544 
	`exô
(
EXIT_FAILURE
);

547 
fd
 = 
	`›í
(
dev_«me
, 
O_RDWR
 | 
O_NONBLOCK
, 0);

549 i‡(-1 =
fd
) {

550 
	`Ârötf
(
°dîr
, "Cannot open '%s': %d, %s\\n",

551 
dev_«me
, 
î∫o
, 
	`°ªº‹
(errno));

552 
	`exô
(
EXIT_FAILURE
);

554 
	}
}

556 
	$ußge
(
FILE
 *
Â
, 
¨gc
, **
¨gv
)

558 
	`Ârötf
(
Â
,

571 
¨gv
[0], 
dev_«me
, 
‰ame_cou¡
);

572 
	}
}

574 c⁄° 
	gsh‹t_›ti⁄s
[] = "d:hmruofc:";

576 c⁄° 
›ti⁄


577 
	gl⁄g_›ti⁄s
[] = {

578 { "devi˚", 
ªquúed_¨gumít
, 
NULL
, 'd' },

579 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

580 { "mm≠", 
no_¨gumít
, 
NULL
, 'm' },

581 { "ªad", 
no_¨gumít
, 
NULL
, 'r' },

582 { "u£Ω", 
no_¨gumít
, 
NULL
, 'u' },

583 { "ouçut", 
no_¨gumít
, 
NULL
, 'o' },

584 { "f‹m©", 
no_¨gumít
, 
NULL
, 'f' },

585 { "cou¡", 
ªquúed_¨gumít
, 
NULL
, 'c' },

589 
	$maö
(
¨gc
, **
¨gv
)

591 
dev_«me
 = "/dev/video0";

594 
idx
;

595 
c
;

597 
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
,

598 
sh‹t_›ti⁄s
, 
l⁄g_›ti⁄s
, &
idx
);

600 i‡(-1 =
c
)

603 
c
) {

608 
dev_«me
 = 
›èrg
;

612 
	`ußge
(
°dout
, 
¨gc
, 
¨gv
);

613 
	`exô
(
EXIT_SUCCESS
);

616 
io
 = 
IO_METHOD_MMAP
;

620 
io
 = 
IO_METHOD_READ
;

624 
io
 = 
IO_METHOD_USERPTR
;

628 
out_buf
++;

632 
f‹˚_f‹m©
++;

636 
î∫o
 = 0;

637 
‰ame_cou¡
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 0);

638 i‡(
î∫o
)

639 
	`î∫o_exô
(
›èrg
);

643 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

644 
	`exô
(
EXIT_FAILURE
);

648 
	`›í_devi˚
();

649 
	`öô_devi˚
();

650 
	`°¨t_ˇ±urög
();

651 
	`maölo›
();

652 
	`°›_ˇ±urög
();

653 
	`unöô_devi˚
();

654 
	`˛o£_devi˚
();

655 
	`Ârötf
(
°dîr
, "\\n");

657 
	}
}

	@v4l2grab.c

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<f˙é.h
>

18 
	~<î∫o.h
>

19 
	~<sys/io˘l.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/time.h
>

22 
	~<sys/mm™.h
>

23 
	~<löux/videodev2.h
>

24 
	~"../libv4l/ö˛ude/libv4l2.h
"

26 
	#CLEAR
(
x
Ë
	`mem£t
(&(x), 0, (x))

	)

28 
	sbuf„r
 {

29 *
	m°¨t
;

30 
size_t
 
	mÀngth
;

33 
	$xio˘l
(
fh
, 
ªque°
, *
¨g
)

35 
r
;

38 
r
 = 
	`v4l2_io˘l
(
fh
, 
ªque°
, 
¨g
);

39 } 
r
 =-1 && ((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
)));

41 i‡(
r
 == -1) {

42 
	`Ârötf
(
°dîr
, "îr‹ %d, %s\\n", 
î∫o
, 
	`°ªº‹
(errno));

43 
	`exô
(
EXIT_FAILURE
);

45 
	}
}

47 
	$maö
(
¨gc
, **
¨gv
)

49 
v4l2_f‹m©
 
fmt
;

50 
v4l2_buf„r
 
buf
;

51 
v4l2_ªque°buf„rs
 
ªq
;

52 
v4l2_buf_ty≥
 
ty≥
;

53 
fd_£t
 
fds
;

54 
timevÆ
 
tv
;

55 
r
, 
fd
 = -1;

56 
i
, 
n_buf„rs
;

57 *
dev_«me
 = "/dev/video0";

58 
out_«me
[256];

59 
FILE
 *
fout
;

60 
buf„r
 *
buf„rs
;

62 
fd
 = 
	`v4l2_›í
(
dev_«me
, 
O_RDWR
 | 
O_NONBLOCK
, 0);

63 i‡(
fd
 < 0) {

64 
	`≥º‹
("Cannot open device");

65 
	`exô
(
EXIT_FAILURE
);

68 
	`CLEAR
(
fmt
);

69 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

70 
fmt
.fmt.
pix
.
width
 = 640;

71 
fmt
.fmt.
pix
.
height
 = 480;

72 
fmt
.fmt.
pix
.
pixñf‹m©
 = 
V4L2_PIX_FMT_RGB24
;

73 
fmt
.fmt.
pix
.
fõld
 = 
V4L2_FIELD_INTERLACED
;

74 
	`xio˘l
(
fd
, 
VIDIOC_S_FMT
, &
fmt
);

75 i‡(
fmt
.fmt.
pix
.
pixñf‹m©
 !
V4L2_PIX_FMT_RGB24
) {

76 
	`¥ötf
("Libv4l didn'táccept RGB24 format. Can'tÖroceed.\\n");

77 
	`exô
(
EXIT_FAILURE
);

79 i‡((
fmt
.fmt.
pix
.
width
 !640Ë|| (fmt.fmt.pix.
height
 != 480))

80 
	`¥ötf
("Warning: driver is sending imageát %dx%d\\n",

81 
fmt
.fmt.
pix
.
width
, fmt.fmt.pix.
height
);

83 
	`CLEAR
(
ªq
);

84 
ªq
.
cou¡
 = 2;

85 
ªq
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

86 
ªq
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

87 
	`xio˘l
(
fd
, 
VIDIOC_REQBUFS
, &
ªq
);

89 
buf„rs
 = 
	`ˇŒoc
(
ªq
.
cou¡
, (*buffers));

90 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
; ++n_buffers) {

91 
	`CLEAR
(
buf
);

93 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

94 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

95 
buf
.
ödex
 = 
n_buf„rs
;

97 
	`xio˘l
(
fd
, 
VIDIOC_QUERYBUF
, &
buf
);

99 
buf„rs
[
n_buf„rs
].
Àngth
 = 
buf
.length;

100 
buf„rs
[
n_buf„rs
].
°¨t
 = 
	`v4l2_mm≠
(
NULL
, 
buf
.
Àngth
,

101 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

102 
fd
, 
buf
.
m
.
off£t
);

104 i‡(
MAP_FAILED
 =
buf„rs
[
n_buf„rs
].
°¨t
) {

105 
	`≥º‹
("mmap");

106 
	`exô
(
EXIT_FAILURE
);

110 
i
 = 0; i < 
n_buf„rs
; ++i) {

111 
	`CLEAR
(
buf
);

112 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

113 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

114 
buf
.
ödex
 = 
i
;

115 
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
);

117 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

119 
	`xio˘l
(
fd
, 
VIDIOC_STREAMON
, &
ty≥
);

120 
i
 = 0; i < 20; i++) {

122 
	`FD_ZERO
(&
fds
);

123 
	`FD_SET
(
fd
, &
fds
);

126 
tv
.
tv_£c
 = 2;

127 
tv
.
tv_u£c
 = 0;

129 
r
 = 
	`£À˘
(
fd
 + 1, &
fds
, 
NULL
, NULL, &
tv
);

130 } (
r
 =-1 && (
î∫o
 = 
EINTR
)));

131 i‡(
r
 == -1) {

132 
	`≥º‹
("select");

133  
î∫o
;

136 
	`CLEAR
(
buf
);

137 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

138 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

139 
	`xio˘l
(
fd
, 
VIDIOC_DQBUF
, &
buf
);

141 
	`•rötf
(
out_«me
, "out%03d.µm", 
i
);

142 
fout
 = 
	`f›í
(
out_«me
, "w");

143 i‡(!
fout
) {

144 
	`≥º‹
("Cannot open image");

145 
	`exô
(
EXIT_FAILURE
);

147 
	`Ârötf
(
fout
, "P6\\n%d %d 255\\n",

148 
fmt
.fmt.
pix
.
width
, fmt.fmt.pix.
height
);

149 
	`fwrôe
(
buf„rs
[
buf
.
ödex
].
°¨t
, buf.
byãsu£d
, 1, 
fout
);

150 
	`f˛o£
(
fout
);

152 
	`xio˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
);

155 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

156 
	`xio˘l
(
fd
, 
VIDIOC_STREAMOFF
, &
ty≥
);

157 
i
 = 0; i < 
n_buf„rs
; ++i)

158 
	`v4l2_munm≠
(
buf„rs
[
i
].
°¨t
, buf„rs[i].
Àngth
);

159 
	`v4l2_˛o£
(
fd
);

162 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/linux/videodev2.h

56 #i‚de‡
__LINUX_VIDEODEV2_H


57 
	#__LINUX_VIDEODEV2_H


	)

59 
	~<sys/time.h
>

61 
	~<löux/io˘l.h
>

62 
	~<löux/ty≥s.h
>

63 
	~<löux/v4l2-comm⁄.h
>

64 
	~<löux/v4l2-c⁄åﬁs.h
>

70 
	#VIDEO_MAX_FRAME
 32

	)

71 
	#VIDEO_MAX_PLANES
 8

	)

78 
	#v4l2_fourcc
(
a
, 
b
, 
c
, 
d
)\

79 ((
__u32
)(
a
Ë| ((__u32)(
b
Ë<< 8Ë| ((__u32)(
c
Ë<< 16Ë| ((__u32)(
d
Ë<< 24))

	)

80 
	#v4l2_fourcc_be
(
a
, 
b
, 
c
, 
d
Ë(
	`v4l2_fourcc
◊, b, c, dË| (1 << 31))

	)

85 
	ev4l2_fõld
 {

86 
	mV4L2_FIELD_ANY
 = 0,

90 
	mV4L2_FIELD_NONE
 = 1,

91 
	mV4L2_FIELD_TOP
 = 2,

92 
	mV4L2_FIELD_BOTTOM
 = 3,

93 
	mV4L2_FIELD_INTERLACED
 = 4,

94 
	mV4L2_FIELD_SEQ_TB
 = 5,

96 
	mV4L2_FIELD_SEQ_BT
 = 6,

97 
	mV4L2_FIELD_ALTERNATE
 = 7,

99 
	mV4L2_FIELD_INTERLACED_TB
 = 8,

102 
	mV4L2_FIELD_INTERLACED_BT
 = 9,

106 
	#V4L2_FIELD_HAS_TOP
(
fõld
) \

107 ((
fõld
Ë=
V4L2_FIELD_TOP
 ||\

108 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

109 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

110 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

111 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

112 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

113 
	#V4L2_FIELD_HAS_BOTTOM
(
fõld
) \

114 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

115 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

116 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

117 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

118 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

119 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

120 
	#V4L2_FIELD_HAS_BOTH
(
fõld
) \

121 ((
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

122 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

123 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

124 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

125 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

126 
	#V4L2_FIELD_HAS_T_OR_B
(
fõld
) \

127 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

128 (
fõld
Ë=
V4L2_FIELD_TOP
 ||\

129 (
fõld
Ë=
V4L2_FIELD_ALTERNATE
)

	)

131 
	ev4l2_buf_ty≥
 {

132 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE
 = 1,

133 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT
 = 2,

134 
	mV4L2_BUF_TYPE_VIDEO_OVERLAY
 = 3,

135 
	mV4L2_BUF_TYPE_VBI_CAPTURE
 = 4,

136 
	mV4L2_BUF_TYPE_VBI_OUTPUT
 = 5,

137 
	mV4L2_BUF_TYPE_SLICED_VBI_CAPTURE
 = 6,

138 
	mV4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 = 7,

141 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 = 8,

143 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 = 9,

144 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 = 10,

145 
	mV4L2_BUF_TYPE_SDR_CAPTURE
 = 11,

146 
	mV4L2_BUF_TYPE_SDR_OUTPUT
 = 12,

148 
	mV4L2_BUF_TYPE_PRIVATE
 = 0x80,

151 
	#V4L2_TYPE_IS_MULTIPLANAR
(
ty≥
) \

152 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 \

153 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
)

	)

155 
	#V4L2_TYPE_IS_OUTPUT
(
ty≥
) \

156 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT
 \

157 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 \

158 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OVERLAY
 \

159 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 \

160 || (
ty≥
Ë=
V4L2_BUF_TYPE_VBI_OUTPUT
 \

161 || (
ty≥
Ë=
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 \

162 || (
ty≥
Ë=
V4L2_BUF_TYPE_SDR_OUTPUT
)

	)

164 
	ev4l2_tu√r_ty≥
 {

165 
	mV4L2_TUNER_RADIO
 = 1,

166 
	mV4L2_TUNER_ANALOG_TV
 = 2,

167 
	mV4L2_TUNER_DIGITAL_TV
 = 3,

168 
	mV4L2_TUNER_SDR
 = 4,

169 
	mV4L2_TUNER_RF
 = 5,

173 
	#V4L2_TUNER_ADC
 
V4L2_TUNER_SDR


	)

175 
	ev4l2_mem‹y
 {

176 
	mV4L2_MEMORY_MMAP
 = 1,

177 
	mV4L2_MEMORY_USERPTR
 = 2,

178 
	mV4L2_MEMORY_OVERLAY
 = 3,

179 
	mV4L2_MEMORY_DMABUF
 = 4,

183 
	ev4l2_cﬁ‹•a˚
 {

188 
	mV4L2_COLORSPACE_DEFAULT
 = 0,

191 
	mV4L2_COLORSPACE_SMPTE170M
 = 1,

194 
	mV4L2_COLORSPACE_SMPTE240M
 = 2,

197 
	mV4L2_COLORSPACE_REC709
 = 3,

203 
	mV4L2_COLORSPACE_BT878
 = 4,

209 
	mV4L2_COLORSPACE_470_SYSTEM_M
 = 5,

216 
	mV4L2_COLORSPACE_470_SYSTEM_BG
 = 6,

222 
	mV4L2_COLORSPACE_JPEG
 = 7,

225 
	mV4L2_COLORSPACE_SRGB
 = 8,

228 
	mV4L2_COLORSPACE_ADOBERGB
 = 9,

231 
	mV4L2_COLORSPACE_BT2020
 = 10,

234 
	mV4L2_COLORSPACE_RAW
 = 11,

237 
	mV4L2_COLORSPACE_DCI_P3
 = 12,

245 
	#V4L2_MAP_COLORSPACE_DEFAULT
(
is_sdtv
, 
is_hdtv
) \

246 ((
is_sdtv
Ë? 
V4L2_COLORSPACE_SMPTE170M
 : \

247 ((
is_hdtv
Ë? 
V4L2_COLORSPACE_REC709
 : 
V4L2_COLORSPACE_SRGB
))

	)

249 
	ev4l2_x„r_func
 {

268 
	mV4L2_XFER_FUNC_DEFAULT
 = 0,

269 
	mV4L2_XFER_FUNC_709
 = 1,

270 
	mV4L2_XFER_FUNC_SRGB
 = 2,

271 
	mV4L2_XFER_FUNC_ADOBERGB
 = 3,

272 
	mV4L2_XFER_FUNC_SMPTE240M
 = 4,

273 
	mV4L2_XFER_FUNC_NONE
 = 5,

274 
	mV4L2_XFER_FUNC_DCI_P3
 = 6,

275 
	mV4L2_XFER_FUNC_SMPTE2084
 = 7,

282 
	#V4L2_MAP_XFER_FUNC_DEFAULT
(
cﬁ•
) \

283 ((
cﬁ•
Ë=
V4L2_COLORSPACE_ADOBERGB
 ? 
V4L2_XFER_FUNC_ADOBERGB
 : \

284 ((
cﬁ•
Ë=
V4L2_COLORSPACE_SMPTE240M
 ? 
V4L2_XFER_FUNC_SMPTE240M
 : \

285 ((
cﬁ•
Ë=
V4L2_COLORSPACE_DCI_P3
 ? 
V4L2_XFER_FUNC_DCI_P3
 : \

286 ((
cﬁ•
Ë=
V4L2_COLORSPACE_RAW
 ? 
V4L2_XFER_FUNC_NONE
 : \

287 ((
cﬁ•
Ë=
V4L2_COLORSPACE_SRGB
 || (cﬁ•Ë=
V4L2_COLORSPACE_JPEG
 ? \

288 
V4L2_XFER_FUNC_SRGB
 : 
V4L2_XFER_FUNC_709
)))))

	)

290 
	ev4l2_ycb¸_ícodög
 {

307 
	mV4L2_YCBCR_ENC_DEFAULT
 = 0,

310 
	mV4L2_YCBCR_ENC_601
 = 1,

313 
	mV4L2_YCBCR_ENC_709
 = 2,

316 
	mV4L2_YCBCR_ENC_XV601
 = 3,

319 
	mV4L2_YCBCR_ENC_XV709
 = 4,

322 
	mV4L2_YCBCR_ENC_SYCC
 = 5,

325 
	mV4L2_YCBCR_ENC_BT2020
 = 6,

328 
	mV4L2_YCBCR_ENC_BT2020_CONST_LUM
 = 7,

331 
	mV4L2_YCBCR_ENC_SMPTE240M
 = 8,

338 
	#V4L2_MAP_YCBCR_ENC_DEFAULT
(
cﬁ•
) \

339 (((
cﬁ•
Ë=
V4L2_COLORSPACE_REC709
 || \

340 (
cﬁ•
Ë=
V4L2_COLORSPACE_DCI_P3
Ë? 
V4L2_YCBCR_ENC_709
 : \

341 ((
cﬁ•
Ë=
V4L2_COLORSPACE_BT2020
 ? 
V4L2_YCBCR_ENC_BT2020
 : \

342 ((
cﬁ•
Ë=
V4L2_COLORSPACE_SMPTE240M
 ? 
V4L2_YCBCR_ENC_SMPTE240M
 : \

343 
V4L2_YCBCR_ENC_601
)))

	)

345 
	ev4l2_qu™tiz©i⁄
 {

352 
	mV4L2_QUANTIZATION_DEFAULT
 = 0,

353 
	mV4L2_QUANTIZATION_FULL_RANGE
 = 1,

354 
	mV4L2_QUANTIZATION_LIM_RANGE
 = 2,

362 
	#V4L2_MAP_QUANTIZATION_DEFAULT
(
is_rgb
, 
cﬁ•
, 
ycb¸_íc
) \

363 (((
is_rgb
Ë&& (
cﬁ•
Ë=
V4L2_COLORSPACE_BT2020
Ë? 
V4L2_QUANTIZATION_LIM_RANGE
 : \

364 (((
is_rgb
Ë|| (
ycb¸_íc
Ë=
V4L2_YCBCR_ENC_XV601
 || \

365 (
ycb¸_íc
Ë=
V4L2_YCBCR_ENC_XV709
 || (
cﬁ•
Ë=
V4L2_COLORSPACE_JPEG
) ? \

366 
V4L2_QUANTIZATION_FULL_RANGE
 : 
V4L2_QUANTIZATION_LIM_RANGE
))

	)

368 
	ev4l2_¥i‹ôy
 {

369 
	mV4L2_PRIORITY_UNSET
 = 0,

370 
	mV4L2_PRIORITY_BACKGROUND
 = 1,

371 
	mV4L2_PRIORITY_INTERACTIVE
 = 2,

372 
	mV4L2_PRIORITY_RECORD
 = 3,

373 
	mV4L2_PRIORITY_DEFAULT
 = 
V4L2_PRIORITY_INTERACTIVE
,

376 
	sv4l2_ª˘
 {

377 
__s32
 
	mÀ·
;

378 
__s32
 
	mt›
;

379 
__u32
 
	mwidth
;

380 
__u32
 
	mheight
;

383 
	sv4l2_‰a˘
 {

384 
__u32
 
	mnumî©‹
;

385 
__u32
 
	mdíomö©‹
;

399 
	sv4l2_ˇ∑bûôy
 {

400 
__u8
 
	mdrivî
[16];

401 
__u8
 
	mˇrd
[32];

402 
__u8
 
	mbus_öfo
[32];

403 
__u32
 
	mvîsi⁄
;

404 
__u32
 
	mˇ∑bûôõs
;

405 
__u32
 
	mdevi˚_ˇps
;

406 
__u32
 
	mª£rved
[3];

410 
	#V4L2_CAP_VIDEO_CAPTURE
 0x00000001

	)

411 
	#V4L2_CAP_VIDEO_OUTPUT
 0x00000002

	)

412 
	#V4L2_CAP_VIDEO_OVERLAY
 0x00000004

	)

413 
	#V4L2_CAP_VBI_CAPTURE
 0x00000010

	)

414 
	#V4L2_CAP_VBI_OUTPUT
 0x00000020

	)

415 
	#V4L2_CAP_SLICED_VBI_CAPTURE
 0x00000040

	)

416 
	#V4L2_CAP_SLICED_VBI_OUTPUT
 0x00000080

	)

417 
	#V4L2_CAP_RDS_CAPTURE
 0x00000100

	)

418 
	#V4L2_CAP_VIDEO_OUTPUT_OVERLAY
 0x00000200

	)

419 
	#V4L2_CAP_HW_FREQ_SEEK
 0x00000400

	)

420 
	#V4L2_CAP_RDS_OUTPUT
 0x00000800

	)

423 
	#V4L2_CAP_VIDEO_CAPTURE_MPLANE
 0x00001000

	)

425 
	#V4L2_CAP_VIDEO_OUTPUT_MPLANE
 0x00002000

	)

427 
	#V4L2_CAP_VIDEO_M2M_MPLANE
 0x00004000

	)

429 
	#V4L2_CAP_VIDEO_M2M
 0x00008000

	)

431 
	#V4L2_CAP_TUNER
 0x00010000

	)

432 
	#V4L2_CAP_AUDIO
 0x00020000

	)

433 
	#V4L2_CAP_RADIO
 0x00040000

	)

434 
	#V4L2_CAP_MODULATOR
 0x00080000

	)

436 
	#V4L2_CAP_SDR_CAPTURE
 0x00100000

	)

437 
	#V4L2_CAP_EXT_PIX_FORMAT
 0x00200000

	)

438 
	#V4L2_CAP_SDR_OUTPUT
 0x00400000

	)

440 
	#V4L2_CAP_READWRITE
 0x01000000

	)

441 
	#V4L2_CAP_ASYNCIO
 0x02000000

	)

442 
	#V4L2_CAP_STREAMING
 0x04000000

	)

444 
	#V4L2_CAP_DEVICE_CAPS
 0x80000000

	)

449 
	sv4l2_pix_f‹m©
 {

450 
__u32
 
	mwidth
;

451 
__u32
 
	mheight
;

452 
__u32
 
	mpixñf‹m©
;

453 
__u32
 
	mfõld
;

454 
__u32
 
	mbyã•îlöe
;

455 
__u32
 
	msizeimage
;

456 
__u32
 
	mcﬁ‹•a˚
;

457 
__u32
 
	m¥iv
;

458 
__u32
 
	mÊags
;

459 
__u32
 
	mycb¸_íc
;

460 
__u32
 
	mqu™tiz©i⁄
;

461 
__u32
 
	mx„r_func
;

467 
	#V4L2_PIX_FMT_RGB332
 
	`v4l2_fourcc
('R', 'G', 'B', '1'Ë

	)

468 
	#V4L2_PIX_FMT_RGB444
 
	`v4l2_fourcc
('R', '4', '4', '4'Ë

	)

469 
	#V4L2_PIX_FMT_ARGB444
 
	`v4l2_fourcc
('A', 'R', '1', '2'Ë

	)

470 
	#V4L2_PIX_FMT_XRGB444
 
	`v4l2_fourcc
('X', 'R', '1', '2'Ë

	)

471 
	#V4L2_PIX_FMT_RGB555
 
	`v4l2_fourcc
('R', 'G', 'B', 'O'Ë

	)

472 
	#V4L2_PIX_FMT_ARGB555
 
	`v4l2_fourcc
('A', 'R', '1', '5'Ë

	)

473 
	#V4L2_PIX_FMT_XRGB555
 
	`v4l2_fourcc
('X', 'R', '1', '5'Ë

	)

474 
	#V4L2_PIX_FMT_RGB565
 
	`v4l2_fourcc
('R', 'G', 'B', 'P'Ë

	)

475 
	#V4L2_PIX_FMT_RGB555X
 
	`v4l2_fourcc
('R', 'G', 'B', 'Q'Ë

	)

476 
	#V4L2_PIX_FMT_ARGB555X
 
	`v4l2_fourcc_be
('A', 'R', '1', '5'Ë

	)

477 
	#V4L2_PIX_FMT_XRGB555X
 
	`v4l2_fourcc_be
('X', 'R', '1', '5'Ë

	)

478 
	#V4L2_PIX_FMT_RGB565X
 
	`v4l2_fourcc
('R', 'G', 'B', 'R'Ë

	)

479 
	#V4L2_PIX_FMT_BGR666
 
	`v4l2_fourcc
('B', 'G', 'R', 'H'Ë

	)

480 
	#V4L2_PIX_FMT_BGR24
 
	`v4l2_fourcc
('B', 'G', 'R', '3'Ë

	)

481 
	#V4L2_PIX_FMT_RGB24
 
	`v4l2_fourcc
('R', 'G', 'B', '3'Ë

	)

482 
	#V4L2_PIX_FMT_BGR32
 
	`v4l2_fourcc
('B', 'G', 'R', '4'Ë

	)

483 
	#V4L2_PIX_FMT_ABGR32
 
	`v4l2_fourcc
('A', 'R', '2', '4'Ë

	)

484 
	#V4L2_PIX_FMT_XBGR32
 
	`v4l2_fourcc
('X', 'R', '2', '4'Ë

	)

485 
	#V4L2_PIX_FMT_RGB32
 
	`v4l2_fourcc
('R', 'G', 'B', '4'Ë

	)

486 
	#V4L2_PIX_FMT_ARGB32
 
	`v4l2_fourcc
('B', 'A', '2', '4'Ë

	)

487 
	#V4L2_PIX_FMT_XRGB32
 
	`v4l2_fourcc
('B', 'X', '2', '4'Ë

	)

490 
	#V4L2_PIX_FMT_GREY
 
	`v4l2_fourcc
('G', 'R', 'E', 'Y'Ë

	)

491 
	#V4L2_PIX_FMT_Y4
 
	`v4l2_fourcc
('Y', '0', '4', ' 'Ë

	)

492 
	#V4L2_PIX_FMT_Y6
 
	`v4l2_fourcc
('Y', '0', '6', ' 'Ë

	)

493 
	#V4L2_PIX_FMT_Y10
 
	`v4l2_fourcc
('Y', '1', '0', ' 'Ë

	)

494 
	#V4L2_PIX_FMT_Y12
 
	`v4l2_fourcc
('Y', '1', '2', ' 'Ë

	)

495 
	#V4L2_PIX_FMT_Y16
 
	`v4l2_fourcc
('Y', '1', '6', ' 'Ë

	)

496 
	#V4L2_PIX_FMT_Y16_BE
 
	`v4l2_fourcc_be
('Y', '1', '6', ' 'Ë

	)

499 
	#V4L2_PIX_FMT_Y10BPACK
 
	`v4l2_fourcc
('Y', '1', '0', 'B'Ë

	)

502 
	#V4L2_PIX_FMT_PAL8
 
	`v4l2_fourcc
('P', 'A', 'L', '8'Ë

	)

505 
	#V4L2_PIX_FMT_UV8
 
	`v4l2_fourcc
('U', 'V', '8', ' 'Ë

	)

508 
	#V4L2_PIX_FMT_YVU410
 
	`v4l2_fourcc
('Y', 'V', 'U', '9'Ë

	)

509 
	#V4L2_PIX_FMT_YVU420
 
	`v4l2_fourcc
('Y', 'V', '1', '2'Ë

	)

510 
	#V4L2_PIX_FMT_YUYV
 
	`v4l2_fourcc
('Y', 'U', 'Y', 'V'Ë

	)

511 
	#V4L2_PIX_FMT_YYUV
 
	`v4l2_fourcc
('Y', 'Y', 'U', 'V'Ë

	)

512 
	#V4L2_PIX_FMT_YVYU
 
	`v4l2_fourcc
('Y', 'V', 'Y', 'U'Ë

	)

513 
	#V4L2_PIX_FMT_UYVY
 
	`v4l2_fourcc
('U', 'Y', 'V', 'Y'Ë

	)

514 
	#V4L2_PIX_FMT_VYUY
 
	`v4l2_fourcc
('V', 'Y', 'U', 'Y'Ë

	)

515 
	#V4L2_PIX_FMT_YUV422P
 
	`v4l2_fourcc
('4', '2', '2', 'P'Ë

	)

516 
	#V4L2_PIX_FMT_YUV411P
 
	`v4l2_fourcc
('4', '1', '1', 'P'Ë

	)

517 
	#V4L2_PIX_FMT_Y41P
 
	`v4l2_fourcc
('Y', '4', '1', 'P'Ë

	)

518 
	#V4L2_PIX_FMT_YUV444
 
	`v4l2_fourcc
('Y', '4', '4', '4'Ë

	)

519 
	#V4L2_PIX_FMT_YUV555
 
	`v4l2_fourcc
('Y', 'U', 'V', 'O'Ë

	)

520 
	#V4L2_PIX_FMT_YUV565
 
	`v4l2_fourcc
('Y', 'U', 'V', 'P'Ë

	)

521 
	#V4L2_PIX_FMT_YUV32
 
	`v4l2_fourcc
('Y', 'U', 'V', '4'Ë

	)

522 
	#V4L2_PIX_FMT_YUV410
 
	`v4l2_fourcc
('Y', 'U', 'V', '9'Ë

	)

523 
	#V4L2_PIX_FMT_YUV420
 
	`v4l2_fourcc
('Y', 'U', '1', '2'Ë

	)

524 
	#V4L2_PIX_FMT_HI240
 
	`v4l2_fourcc
('H', 'I', '2', '4'Ë

	)

525 
	#V4L2_PIX_FMT_HM12
 
	`v4l2_fourcc
('H', 'M', '1', '2'Ë

	)

526 
	#V4L2_PIX_FMT_M420
 
	`v4l2_fourcc
('M', '4', '2', '0'Ë

	)

529 
	#V4L2_PIX_FMT_NV12
 
	`v4l2_fourcc
('N', 'V', '1', '2'Ë

	)

530 
	#V4L2_PIX_FMT_NV21
 
	`v4l2_fourcc
('N', 'V', '2', '1'Ë

	)

531 
	#V4L2_PIX_FMT_NV16
 
	`v4l2_fourcc
('N', 'V', '1', '6'Ë

	)

532 
	#V4L2_PIX_FMT_NV61
 
	`v4l2_fourcc
('N', 'V', '6', '1'Ë

	)

533 
	#V4L2_PIX_FMT_NV24
 
	`v4l2_fourcc
('N', 'V', '2', '4'Ë

	)

534 
	#V4L2_PIX_FMT_NV42
 
	`v4l2_fourcc
('N', 'V', '4', '2'Ë

	)

537 
	#V4L2_PIX_FMT_NV12M
 
	`v4l2_fourcc
('N', 'M', '1', '2'Ë

	)

538 
	#V4L2_PIX_FMT_NV21M
 
	`v4l2_fourcc
('N', 'M', '2', '1'Ë

	)

539 
	#V4L2_PIX_FMT_NV16M
 
	`v4l2_fourcc
('N', 'M', '1', '6'Ë

	)

540 
	#V4L2_PIX_FMT_NV61M
 
	`v4l2_fourcc
('N', 'M', '6', '1'Ë

	)

541 
	#V4L2_PIX_FMT_NV12MT
 
	`v4l2_fourcc
('T', 'M', '1', '2'Ë

	)

542 
	#V4L2_PIX_FMT_NV12MT_16X16
 
	`v4l2_fourcc
('V', 'M', '1', '2'Ë

	)

545 
	#V4L2_PIX_FMT_YUV420M
 
	`v4l2_fourcc
('Y', 'M', '1', '2'Ë

	)

546 
	#V4L2_PIX_FMT_YVU420M
 
	`v4l2_fourcc
('Y', 'M', '2', '1'Ë

	)

549 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B', 'A', '8', '1'Ë

	)

550 
	#V4L2_PIX_FMT_SGBRG8
 
	`v4l2_fourcc
('G', 'B', 'R', 'G'Ë

	)

551 
	#V4L2_PIX_FMT_SGRBG8
 
	`v4l2_fourcc
('G', 'R', 'B', 'G'Ë

	)

552 
	#V4L2_PIX_FMT_SRGGB8
 
	`v4l2_fourcc
('R', 'G', 'G', 'B'Ë

	)

553 
	#V4L2_PIX_FMT_SBGGR10
 
	`v4l2_fourcc
('B', 'G', '1', '0'Ë

	)

554 
	#V4L2_PIX_FMT_SGBRG10
 
	`v4l2_fourcc
('G', 'B', '1', '0'Ë

	)

555 
	#V4L2_PIX_FMT_SGRBG10
 
	`v4l2_fourcc
('B', 'A', '1', '0'Ë

	)

556 
	#V4L2_PIX_FMT_SRGGB10
 
	`v4l2_fourcc
('R', 'G', '1', '0'Ë

	)

558 
	#V4L2_PIX_FMT_SBGGR10P
 
	`v4l2_fourcc
('p', 'B', 'A', 'A')

	)

559 
	#V4L2_PIX_FMT_SGBRG10P
 
	`v4l2_fourcc
('p', 'G', 'A', 'A')

	)

560 
	#V4L2_PIX_FMT_SGRBG10P
 
	`v4l2_fourcc
('p', 'g', 'A', 'A')

	)

561 
	#V4L2_PIX_FMT_SRGGB10P
 
	`v4l2_fourcc
('p', 'R', 'A', 'A')

	)

563 
	#V4L2_PIX_FMT_SBGGR10ALAW8
 
	`v4l2_fourcc
('a', 'B', 'A', '8')

	)

564 
	#V4L2_PIX_FMT_SGBRG10ALAW8
 
	`v4l2_fourcc
('a', 'G', 'A', '8')

	)

565 
	#V4L2_PIX_FMT_SGRBG10ALAW8
 
	`v4l2_fourcc
('a', 'g', 'A', '8')

	)

566 
	#V4L2_PIX_FMT_SRGGB10ALAW8
 
	`v4l2_fourcc
('a', 'R', 'A', '8')

	)

568 
	#V4L2_PIX_FMT_SBGGR10DPCM8
 
	`v4l2_fourcc
('b', 'B', 'A', '8')

	)

569 
	#V4L2_PIX_FMT_SGBRG10DPCM8
 
	`v4l2_fourcc
('b', 'G', 'A', '8')

	)

570 
	#V4L2_PIX_FMT_SGRBG10DPCM8
 
	`v4l2_fourcc
('B', 'D', '1', '0')

	)

571 
	#V4L2_PIX_FMT_SRGGB10DPCM8
 
	`v4l2_fourcc
('b', 'R', 'A', '8')

	)

572 
	#V4L2_PIX_FMT_SBGGR12
 
	`v4l2_fourcc
('B', 'G', '1', '2'Ë

	)

573 
	#V4L2_PIX_FMT_SGBRG12
 
	`v4l2_fourcc
('G', 'B', '1', '2'Ë

	)

574 
	#V4L2_PIX_FMT_SGRBG12
 
	`v4l2_fourcc
('B', 'A', '1', '2'Ë

	)

575 
	#V4L2_PIX_FMT_SRGGB12
 
	`v4l2_fourcc
('R', 'G', '1', '2'Ë

	)

576 
	#V4L2_PIX_FMT_SBGGR16
 
	`v4l2_fourcc
('B', 'Y', 'R', '2'Ë

	)

579 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M', 'J', 'P', 'G'Ë

	)

580 
	#V4L2_PIX_FMT_JPEG
 
	`v4l2_fourcc
('J', 'P', 'E', 'G'Ë

	)

581 
	#V4L2_PIX_FMT_DV
 
	`v4l2_fourcc
('d', 'v', 's', 'd'Ë

	)

582 
	#V4L2_PIX_FMT_MPEG
 
	`v4l2_fourcc
('M', 'P', 'E', 'G'Ë

	)

583 
	#V4L2_PIX_FMT_H264
 
	`v4l2_fourcc
('H', '2', '6', '4'Ë

	)

584 
	#V4L2_PIX_FMT_H264_NO_SC
 
	`v4l2_fourcc
('A', 'V', 'C', '1'Ë

	)

585 
	#V4L2_PIX_FMT_H264_MVC
 
	`v4l2_fourcc
('M', '2', '6', '4'Ë

	)

586 
	#V4L2_PIX_FMT_H263
 
	`v4l2_fourcc
('H', '2', '6', '3'Ë

	)

587 
	#V4L2_PIX_FMT_MPEG1
 
	`v4l2_fourcc
('M', 'P', 'G', '1'Ë

	)

588 
	#V4L2_PIX_FMT_MPEG2
 
	`v4l2_fourcc
('M', 'P', 'G', '2'Ë

	)

589 
	#V4L2_PIX_FMT_MPEG4
 
	`v4l2_fourcc
('M', 'P', 'G', '4'Ë

	)

590 
	#V4L2_PIX_FMT_XVID
 
	`v4l2_fourcc
('X', 'V', 'I', 'D'Ë

	)

591 
	#V4L2_PIX_FMT_VC1_ANNEX_G
 
	`v4l2_fourcc
('V', 'C', '1', 'G'Ë

	)

592 
	#V4L2_PIX_FMT_VC1_ANNEX_L
 
	`v4l2_fourcc
('V', 'C', '1', 'L'Ë

	)

593 
	#V4L2_PIX_FMT_VP8
 
	`v4l2_fourcc
('V', 'P', '8', '0'Ë

	)

596 
	#V4L2_PIX_FMT_CPIA1
 
	`v4l2_fourcc
('C', 'P', 'I', 'A'Ë

	)

597 
	#V4L2_PIX_FMT_WNVA
 
	`v4l2_fourcc
('W', 'N', 'V', 'A'Ë

	)

598 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S', '9', '1', '0'Ë

	)

599 
	#V4L2_PIX_FMT_SN9C20X_I420
 
	`v4l2_fourcc
('S', '9', '2', '0'Ë

	)

600 
	#V4L2_PIX_FMT_PWC1
 
	`v4l2_fourcc
('P', 'W', 'C', '1'Ë

	)

601 
	#V4L2_PIX_FMT_PWC2
 
	`v4l2_fourcc
('P', 'W', 'C', '2'Ë

	)

602 
	#V4L2_PIX_FMT_ET61X251
 
	`v4l2_fourcc
('E', '6', '2', '5'Ë

	)

603 
	#V4L2_PIX_FMT_SPCA501
 
	`v4l2_fourcc
('S', '5', '0', '1'Ë

	)

604 
	#V4L2_PIX_FMT_SPCA505
 
	`v4l2_fourcc
('S', '5', '0', '5'Ë

	)

605 
	#V4L2_PIX_FMT_SPCA508
 
	`v4l2_fourcc
('S', '5', '0', '8'Ë

	)

606 
	#V4L2_PIX_FMT_SPCA561
 
	`v4l2_fourcc
('S', '5', '6', '1'Ë

	)

607 
	#V4L2_PIX_FMT_PAC207
 
	`v4l2_fourcc
('P', '2', '0', '7'Ë

	)

608 
	#V4L2_PIX_FMT_MR97310A
 
	`v4l2_fourcc
('M', '3', '1', '0'Ë

	)

609 
	#V4L2_PIX_FMT_JL2005BCD
 
	`v4l2_fourcc
('J', 'L', '2', '0'Ë

	)

610 
	#V4L2_PIX_FMT_SN9C2028
 
	`v4l2_fourcc
('S', 'O', 'N', 'X'Ë

	)

611 
	#V4L2_PIX_FMT_SQ905C
 
	`v4l2_fourcc
('9', '0', '5', 'C'Ë

	)

612 
	#V4L2_PIX_FMT_PJPG
 
	`v4l2_fourcc
('P', 'J', 'P', 'G'Ë

	)

613 
	#V4L2_PIX_FMT_OV511
 
	`v4l2_fourcc
('O', '5', '1', '1'Ë

	)

614 
	#V4L2_PIX_FMT_OV518
 
	`v4l2_fourcc
('O', '5', '1', '8'Ë

	)

615 
	#V4L2_PIX_FMT_STV0680
 
	`v4l2_fourcc
('S', '6', '8', '0'Ë

	)

616 
	#V4L2_PIX_FMT_TM6000
 
	`v4l2_fourcc
('T', 'M', '6', '0'Ë

	)

617 
	#V4L2_PIX_FMT_CIT_YYVYUY
 
	`v4l2_fourcc
('C', 'I', 'T', 'V'Ë

	)

618 
	#V4L2_PIX_FMT_KONICA420
 
	`v4l2_fourcc
('K', 'O', 'N', 'I'Ë

	)

619 
	#V4L2_PIX_FMT_JPGL
 
	`v4l2_fourcc
('J', 'P', 'G', 'L'Ë

	)

620 
	#V4L2_PIX_FMT_SE401
 
	`v4l2_fourcc
('S', '4', '0', '1'Ë

	)

621 
	#V4L2_PIX_FMT_S5C_UYVY_JPG
 
	`v4l2_fourcc
('S', '5', 'C', 'I'Ë

	)

622 
	#V4L2_PIX_FMT_Y8I
 
	`v4l2_fourcc
('Y', '8', 'I', ' 'Ë

	)

623 
	#V4L2_PIX_FMT_Y12I
 
	`v4l2_fourcc
('Y', '1', '2', 'I'Ë

	)

624 
	#V4L2_PIX_FMT_Z16
 
	`v4l2_fourcc
('Z', '1', '6', ' 'Ë

	)

627 
	#V4L2_SDR_FMT_CU8
 
	`v4l2_fourcc
('C', 'U', '0', '8'Ë

	)

628 
	#V4L2_SDR_FMT_CU16LE
 
	`v4l2_fourcc
('C', 'U', '1', '6'Ë

	)

629 
	#V4L2_SDR_FMT_CS8
 
	`v4l2_fourcc
('C', 'S', '0', '8'Ë

	)

630 
	#V4L2_SDR_FMT_CS14LE
 
	`v4l2_fourcc
('C', 'S', '1', '4'Ë

	)

631 
	#V4L2_SDR_FMT_RU12LE
 
	`v4l2_fourcc
('R', 'U', '1', '2'Ë

	)

634 
	#V4L2_PIX_FMT_PRIV_MAGIC
 0x„edˇ„

	)

637 
	#V4L2_PIX_FMT_FLAG_PREMUL_ALPHA
 0x00000001

	)

642 
	sv4l2_fmtdesc
 {

643 
__u32
 
	mödex
;

644 
__u32
 
	mty≥
;

645 
__u32
 
	mÊags
;

646 
__u8
 
	mdes¸ùti⁄
[32];

647 
__u32
 
	mpixñf‹m©
;

648 
__u32
 
	mª£rved
[4];

651 
	#V4L2_FMT_FLAG_COMPRESSED
 0x0001

	)

652 
	#V4L2_FMT_FLAG_EMULATED
 0x0002

	)

659 
	ev4l2_‰msizëy≥s
 {

660 
	mV4L2_FRMSIZE_TYPE_DISCRETE
 = 1,

661 
	mV4L2_FRMSIZE_TYPE_CONTINUOUS
 = 2,

662 
	mV4L2_FRMSIZE_TYPE_STEPWISE
 = 3,

665 
	sv4l2_‰msize_dis¸ëe
 {

666 
__u32
 
	mwidth
;

667 
__u32
 
	mheight
;

670 
	sv4l2_‰msize_°ïwi£
 {

671 
__u32
 
	mmö_width
;

672 
__u32
 
	mmax_width
;

673 
__u32
 
	m°ï_width
;

674 
__u32
 
	mmö_height
;

675 
__u32
 
	mmax_height
;

676 
__u32
 
	m°ï_height
;

679 
	sv4l2_‰msizìnum
 {

680 
__u32
 
	mödex
;

681 
__u32
 
	mpixñ_f‹m©
;

682 
__u32
 
	mty≥
;

685 
v4l2_‰msize_dis¸ëe
 
	mdis¸ëe
;

686 
v4l2_‰msize_°ïwi£
 
	m°ïwi£
;

689 
__u32
 
	mª£rved
[2];

695 
	ev4l2_‰mivÆty≥s
 {

696 
	mV4L2_FRMIVAL_TYPE_DISCRETE
 = 1,

697 
	mV4L2_FRMIVAL_TYPE_CONTINUOUS
 = 2,

698 
	mV4L2_FRMIVAL_TYPE_STEPWISE
 = 3,

701 
	sv4l2_‰mivÆ_°ïwi£
 {

702 
v4l2_‰a˘
 
	mmö
;

703 
v4l2_‰a˘
 
	mmax
;

704 
v4l2_‰a˘
 
	m°ï
;

707 
	sv4l2_‰mivÆíum
 {

708 
__u32
 
	mödex
;

709 
__u32
 
	mpixñ_f‹m©
;

710 
__u32
 
	mwidth
;

711 
__u32
 
	mheight
;

712 
__u32
 
	mty≥
;

715 
v4l2_‰a˘
 
	mdis¸ëe
;

716 
v4l2_‰mivÆ_°ïwi£
 
	m°ïwi£
;

719 
__u32
 
	mª£rved
[2];

726 
	sv4l2_timecode
 {

727 
__u32
 
	mty≥
;

728 
__u32
 
	mÊags
;

729 
__u8
 
	m‰ames
;

730 
__u8
 
	m£c⁄ds
;

731 
__u8
 
	mmöuãs
;

732 
__u8
 
	mhours
;

733 
__u8
 
	mu£rbôs
[4];

737 
	#V4L2_TC_TYPE_24FPS
 1

	)

738 
	#V4L2_TC_TYPE_25FPS
 2

	)

739 
	#V4L2_TC_TYPE_30FPS
 3

	)

740 
	#V4L2_TC_TYPE_50FPS
 4

	)

741 
	#V4L2_TC_TYPE_60FPS
 5

	)

744 
	#V4L2_TC_FLAG_DROPFRAME
 0x0001

	)

745 
	#V4L2_TC_FLAG_COLORFRAME
 0x0002

	)

746 
	#V4L2_TC_USERBITS_fõld
 0x000C

	)

747 
	#V4L2_TC_USERBITS_USERDEFINED
 0x0000

	)

748 
	#V4L2_TC_USERBITS_8BITCHARS
 0x0008

	)

751 
	sv4l2_j≥gcom¥essi⁄
 {

752 
	mquÆôy
;

754 
	mAPPn
;

756 
	mAPP_Àn
;

757 
	mAPP_d©a
[60];

759 
	mCOM_Àn
;

760 
	mCOM_d©a
[60];

762 
__u32
 
	mj≥g_m¨kîs
;

772 
	#V4L2_JPEG_MARKER_DHT
 (1<<3Ë

	)

773 
	#V4L2_JPEG_MARKER_DQT
 (1<<4Ë

	)

774 
	#V4L2_JPEG_MARKER_DRI
 (1<<5Ë

	)

775 
	#V4L2_JPEG_MARKER_COM
 (1<<6Ë

	)

776 
	#V4L2_JPEG_MARKER_APP
 (1<<7Ë

	)

783 
	sv4l2_ªque°buf„rs
 {

784 
__u32
 
	mcou¡
;

785 
__u32
 
	mty≥
;

786 
__u32
 
	mmem‹y
;

787 
__u32
 
	mª£rved
[2];

810 
	sv4l2_∂™e
 {

811 
__u32
 
	mbyãsu£d
;

812 
__u32
 
	mÀngth
;

814 
__u32
 
	mmem_off£t
;

815 
	mu£Ωå
;

816 
__s32
 
	mfd
;

817 } 
	mm
;

818 
__u32
 
	md©a_off£t
;

819 
__u32
 
	mª£rved
[11];

852 
	sv4l2_buf„r
 {

853 
__u32
 
	mödex
;

854 
__u32
 
	mty≥
;

855 
__u32
 
	mbyãsu£d
;

856 
__u32
 
	mÊags
;

857 
__u32
 
	mfõld
;

858 
timevÆ
 
	mtime°amp
;

859 
v4l2_timecode
 
	mtimecode
;

860 
__u32
 
	m£quí˚
;

863 
__u32
 
	mmem‹y
;

865 
__u32
 
	moff£t
;

866 
	mu£Ωå
;

867 
v4l2_∂™e
 *
	m∂™es
;

868 
__s32
 
	mfd
;

869 } 
	mm
;

870 
__u32
 
	mÀngth
;

871 
__u32
 
	mª£rved2
;

872 
__u32
 
	mª£rved
;

877 
	#V4L2_BUF_FLAG_MAPPED
 0x00000001

	)

879 
	#V4L2_BUF_FLAG_QUEUED
 0x00000002

	)

881 
	#V4L2_BUF_FLAG_DONE
 0x00000004

	)

883 
	#V4L2_BUF_FLAG_KEYFRAME
 0x00000008

	)

885 
	#V4L2_BUF_FLAG_PFRAME
 0x00000010

	)

887 
	#V4L2_BUF_FLAG_BFRAME
 0x00000020

	)

889 
	#V4L2_BUF_FLAG_ERROR
 0x00000040

	)

891 
	#V4L2_BUF_FLAG_TIMECODE
 0x00000100

	)

893 
	#V4L2_BUF_FLAG_PREPARED
 0x00000400

	)

895 
	#V4L2_BUF_FLAG_NO_CACHE_INVALIDATE
 0x00000800

	)

896 
	#V4L2_BUF_FLAG_NO_CACHE_CLEAN
 0x00001000

	)

898 
	#V4L2_BUF_FLAG_TIMESTAMP_MASK
 0x0000e000

	)

899 
	#V4L2_BUF_FLAG_TIMESTAMP_UNKNOWN
 0x00000000

	)

900 
	#V4L2_BUF_FLAG_TIMESTAMP_MONOTONIC
 0x00002000

	)

901 
	#V4L2_BUF_FLAG_TIMESTAMP_COPY
 0x00004000

	)

903 
	#V4L2_BUF_FLAG_TSTAMP_SRC_MASK
 0x00070000

	)

904 
	#V4L2_BUF_FLAG_TSTAMP_SRC_EOF
 0x00000000

	)

905 
	#V4L2_BUF_FLAG_TSTAMP_SRC_SOE
 0x00010000

	)

907 
	#V4L2_BUF_FLAG_LAST
 0x00100000

	)

927 
	sv4l2_exp‹tbuf„r
 {

928 
__u32
 
	mty≥
;

929 
__u32
 
	mödex
;

930 
__u32
 
	m∂™e
;

931 
__u32
 
	mÊags
;

932 
__s32
 
	mfd
;

933 
__u32
 
	mª£rved
[11];

939 
	sv4l2_‰amebuf„r
 {

940 
__u32
 
	mˇ∑bûôy
;

941 
__u32
 
	mÊags
;

944 *
	mba£
;

946 
__u32
 
	mwidth
;

947 
__u32
 
	mheight
;

948 
__u32
 
	mpixñf‹m©
;

949 
__u32
 
	mfõld
;

950 
__u32
 
	mbyã•îlöe
;

951 
__u32
 
	msizeimage
;

952 
__u32
 
	mcﬁ‹•a˚
;

953 
__u32
 
	m¥iv
;

954 } 
	mfmt
;

957 
	#V4L2_FBUF_CAP_EXTERNOVERLAY
 0x0001

	)

958 
	#V4L2_FBUF_CAP_CHROMAKEY
 0x0002

	)

959 
	#V4L2_FBUF_CAP_LIST_CLIPPING
 0x0004

	)

960 
	#V4L2_FBUF_CAP_BITMAP_CLIPPING
 0x0008

	)

961 
	#V4L2_FBUF_CAP_LOCAL_ALPHA
 0x0010

	)

962 
	#V4L2_FBUF_CAP_GLOBAL_ALPHA
 0x0020

	)

963 
	#V4L2_FBUF_CAP_LOCAL_INV_ALPHA
 0x0040

	)

964 
	#V4L2_FBUF_CAP_SRC_CHROMAKEY
 0x0080

	)

966 
	#V4L2_FBUF_FLAG_PRIMARY
 0x0001

	)

967 
	#V4L2_FBUF_FLAG_OVERLAY
 0x0002

	)

968 
	#V4L2_FBUF_FLAG_CHROMAKEY
 0x0004

	)

969 
	#V4L2_FBUF_FLAG_LOCAL_ALPHA
 0x0008

	)

970 
	#V4L2_FBUF_FLAG_GLOBAL_ALPHA
 0x0010

	)

971 
	#V4L2_FBUF_FLAG_LOCAL_INV_ALPHA
 0x0020

	)

972 
	#V4L2_FBUF_FLAG_SRC_CHROMAKEY
 0x0040

	)

974 
	sv4l2_˛ù
 {

975 
v4l2_ª˘
 
	mc
;

976 
v4l2_˛ù
 *
	m√xt
;

979 
	sv4l2_wödow
 {

980 
v4l2_ª˘
 
	mw
;

981 
__u32
 
	mfõld
;

982 
__u32
 
	mchromakey
;

983 
v4l2_˛ù
 *
	m˛ùs
;

984 
__u32
 
	m˛ùcou¡
;

985 *
	mbôm≠
;

986 
__u8
 
	mglobÆ_Æpha
;

992 
	sv4l2_ˇ±uª∑rm
 {

993 
__u32
 
	mˇ∑bûôy
;

994 
__u32
 
	mˇ±uªmode
;

995 
v4l2_‰a˘
 
	mtimïî‰ame
;

996 
__u32
 
	mexãndedmode
;

997 
__u32
 
	mªadbuf„rs
;

998 
__u32
 
	mª£rved
[4];

1002 
	#V4L2_MODE_HIGHQUALITY
 0x0001

	)

1003 
	#V4L2_CAP_TIMEPERFRAME
 0x1000

	)

1005 
	sv4l2_ouçuç¨m
 {

1006 
__u32
 
	mˇ∑bûôy
;

1007 
__u32
 
	mouçutmode
;

1008 
v4l2_‰a˘
 
	mtimïî‰ame
;

1009 
__u32
 
	mexãndedmode
;

1010 
__u32
 
	mwrôebuf„rs
;

1011 
__u32
 
	mª£rved
[4];

1017 
	sv4l2_¸›ˇp
 {

1018 
__u32
 
	mty≥
;

1019 
v4l2_ª˘
 
	mbounds
;

1020 
v4l2_ª˘
 
	mde‰e˘
;

1021 
v4l2_‰a˘
 
	mpixña•e˘
;

1024 
	sv4l2_¸›
 {

1025 
__u32
 
	mty≥
;

1026 
v4l2_ª˘
 
	mc
;

1042 
	sv4l2_£À˘i⁄
 {

1043 
__u32
 
	mty≥
;

1044 
__u32
 
	mèrgë
;

1045 
__u32
 
	mÊags
;

1046 
v4l2_ª˘
 
	mr
;

1047 
__u32
 
	mª£rved
[9];

1055 
__u64
 
	tv4l2_°d_id
;

1058 
	#V4L2_STD_PAL_B
 ((
v4l2_°d_id
)0x00000001)

	)

1059 
	#V4L2_STD_PAL_B1
 ((
v4l2_°d_id
)0x00000002)

	)

1060 
	#V4L2_STD_PAL_G
 ((
v4l2_°d_id
)0x00000004)

	)

1061 
	#V4L2_STD_PAL_H
 ((
v4l2_°d_id
)0x00000008)

	)

1062 
	#V4L2_STD_PAL_I
 ((
v4l2_°d_id
)0x00000010)

	)

1063 
	#V4L2_STD_PAL_D
 ((
v4l2_°d_id
)0x00000020)

	)

1064 
	#V4L2_STD_PAL_D1
 ((
v4l2_°d_id
)0x00000040)

	)

1065 
	#V4L2_STD_PAL_K
 ((
v4l2_°d_id
)0x00000080)

	)

1067 
	#V4L2_STD_PAL_M
 ((
v4l2_°d_id
)0x00000100)

	)

1068 
	#V4L2_STD_PAL_N
 ((
v4l2_°d_id
)0x00000200)

	)

1069 
	#V4L2_STD_PAL_Nc
 ((
v4l2_°d_id
)0x00000400)

	)

1070 
	#V4L2_STD_PAL_60
 ((
v4l2_°d_id
)0x00000800)

	)

1072 
	#V4L2_STD_NTSC_M
 ((
v4l2_°d_id
)0x00001000Ë

	)

1073 
	#V4L2_STD_NTSC_M_JP
 ((
v4l2_°d_id
)0x00002000Ë

	)

1074 
	#V4L2_STD_NTSC_443
 ((
v4l2_°d_id
)0x00004000)

	)

1075 
	#V4L2_STD_NTSC_M_KR
 ((
v4l2_°d_id
)0x00008000Ë

	)

1077 
	#V4L2_STD_SECAM_B
 ((
v4l2_°d_id
)0x00010000)

	)

1078 
	#V4L2_STD_SECAM_D
 ((
v4l2_°d_id
)0x00020000)

	)

1079 
	#V4L2_STD_SECAM_G
 ((
v4l2_°d_id
)0x00040000)

	)

1080 
	#V4L2_STD_SECAM_H
 ((
v4l2_°d_id
)0x00080000)

	)

1081 
	#V4L2_STD_SECAM_K
 ((
v4l2_°d_id
)0x00100000)

	)

1082 
	#V4L2_STD_SECAM_K1
 ((
v4l2_°d_id
)0x00200000)

	)

1083 
	#V4L2_STD_SECAM_L
 ((
v4l2_°d_id
)0x00400000)

	)

1084 
	#V4L2_STD_SECAM_LC
 ((
v4l2_°d_id
)0x00800000)

	)

1087 
	#V4L2_STD_ATSC_8_VSB
 ((
v4l2_°d_id
)0x01000000)

	)

1088 
	#V4L2_STD_ATSC_16_VSB
 ((
v4l2_°d_id
)0x02000000)

	)

1108 
	#V4L2_STD_NTSC
 (
V4L2_STD_NTSC_M
 |\

1109 
V4L2_STD_NTSC_M_JP
 |\

1110 
V4L2_STD_NTSC_M_KR
)

	)

1112 
	#V4L2_STD_SECAM_DK
 (
V4L2_STD_SECAM_D
 |\

1113 
V4L2_STD_SECAM_K
 |\

1114 
V4L2_STD_SECAM_K1
)

	)

1116 
	#V4L2_STD_SECAM
 (
V4L2_STD_SECAM_B
 |\

1117 
V4L2_STD_SECAM_G
 |\

1118 
V4L2_STD_SECAM_H
 |\

1119 
V4L2_STD_SECAM_DK
 |\

1120 
V4L2_STD_SECAM_L
 |\

1121 
V4L2_STD_SECAM_LC
)

	)

1123 
	#V4L2_STD_PAL_BG
 (
V4L2_STD_PAL_B
 |\

1124 
V4L2_STD_PAL_B1
 |\

1125 
V4L2_STD_PAL_G
)

	)

1126 
	#V4L2_STD_PAL_DK
 (
V4L2_STD_PAL_D
 |\

1127 
V4L2_STD_PAL_D1
 |\

1128 
V4L2_STD_PAL_K
)

	)

1134 
	#V4L2_STD_PAL
 (
V4L2_STD_PAL_BG
 |\

1135 
V4L2_STD_PAL_DK
 |\

1136 
V4L2_STD_PAL_H
 |\

1137 
V4L2_STD_PAL_I
)

	)

1139 
	#V4L2_STD_B
 (
V4L2_STD_PAL_B
 |\

1140 
V4L2_STD_PAL_B1
 |\

1141 
V4L2_STD_SECAM_B
)

	)

1142 
	#V4L2_STD_G
 (
V4L2_STD_PAL_G
 |\

1143 
V4L2_STD_SECAM_G
)

	)

1144 
	#V4L2_STD_H
 (
V4L2_STD_PAL_H
 |\

1145 
V4L2_STD_SECAM_H
)

	)

1146 
	#V4L2_STD_L
 (
V4L2_STD_SECAM_L
 |\

1147 
V4L2_STD_SECAM_LC
)

	)

1148 
	#V4L2_STD_GH
 (
V4L2_STD_G
 |\

1149 
V4L2_STD_H
)

	)

1150 
	#V4L2_STD_DK
 (
V4L2_STD_PAL_DK
 |\

1151 
V4L2_STD_SECAM_DK
)

	)

1152 
	#V4L2_STD_BG
 (
V4L2_STD_B
 |\

1153 
V4L2_STD_G
)

	)

1154 
	#V4L2_STD_MN
 (
V4L2_STD_PAL_M
 |\

1155 
V4L2_STD_PAL_N
 |\

1156 
V4L2_STD_PAL_Nc
 |\

1157 
V4L2_STD_NTSC
)

	)

1160 
	#V4L2_STD_MTS
 (
V4L2_STD_NTSC_M
 |\

1161 
V4L2_STD_PAL_M
 |\

1162 
V4L2_STD_PAL_N
 |\

1163 
V4L2_STD_PAL_Nc
)

	)

1166 
	#V4L2_STD_525_60
 (
V4L2_STD_PAL_M
 |\

1167 
V4L2_STD_PAL_60
 |\

1168 
V4L2_STD_NTSC
 |\

1169 
V4L2_STD_NTSC_443
)

	)

1171 
	#V4L2_STD_625_50
 (
V4L2_STD_PAL
 |\

1172 
V4L2_STD_PAL_N
 |\

1173 
V4L2_STD_PAL_Nc
 |\

1174 
V4L2_STD_SECAM
)

	)

1176 
	#V4L2_STD_ATSC
 (
V4L2_STD_ATSC_8_VSB
 |\

1177 
V4L2_STD_ATSC_16_VSB
)

	)

1179 
	#V4L2_STD_UNKNOWN
 0

	)

1180 
	#V4L2_STD_ALL
 (
V4L2_STD_525_60
 |\

1181 
V4L2_STD_625_50
)

	)

1183 
	sv4l2_°™d¨d
 {

1184 
__u32
 
	mödex
;

1185 
v4l2_°d_id
 
	mid
;

1186 
__u8
 
	m«me
[24];

1187 
v4l2_‰a˘
 
	m‰amïîiod
;

1188 
__u32
 
	m‰amñöes
;

1189 
__u32
 
	mª£rved
[4];

1228 
	sv4l2_bt_timögs
 {

1229 
__u32
 
	mwidth
;

1230 
__u32
 
	mheight
;

1231 
__u32
 
	möãæa˚d
;

1232 
__u32
 
	mpﬁ¨ôõs
;

1233 
__u64
 
	mpixñ˛ock
;

1234 
__u32
 
	mh‰⁄ç‹ch
;

1235 
__u32
 
	mhsync
;

1236 
__u32
 
	mhbackp‹ch
;

1237 
__u32
 
	mv‰⁄ç‹ch
;

1238 
__u32
 
	mvsync
;

1239 
__u32
 
	mvbackp‹ch
;

1240 
__u32
 
	mû_v‰⁄ç‹ch
;

1241 
__u32
 
	mû_vsync
;

1242 
__u32
 
	mû_vbackp‹ch
;

1243 
__u32
 
	m°™d¨ds
;

1244 
__u32
 
	mÊags
;

1245 
__u32
 
	mª£rved
[14];

1246 } 
__©åibuã__
 ((
∑cked
));

1249 
	#V4L2_DV_PROGRESSIVE
 0

	)

1250 
	#V4L2_DV_INTERLACED
 1

	)

1253 
	#V4L2_DV_VSYNC_POS_POL
 0x00000001

	)

1254 
	#V4L2_DV_HSYNC_POS_POL
 0x00000002

	)

1257 
	#V4L2_DV_BT_STD_CEA861
 (1 << 0Ë

	)

1258 
	#V4L2_DV_BT_STD_DMT
 (1 << 1Ë

	)

1259 
	#V4L2_DV_BT_STD_CVT
 (1 << 2Ë

	)

1260 
	#V4L2_DV_BT_STD_GTF
 (1 << 3Ë

	)

1268 
	#V4L2_DV_FL_REDUCED_BLANKING
 (1 << 0)

	)

1272 
	#V4L2_DV_FL_CAN_REDUCE_FPS
 (1 << 1)

	)

1280 
	#V4L2_DV_FL_REDUCED_FPS
 (1 << 2)

	)

1285 
	#V4L2_DV_FL_HALF_LINE
 (1 << 3)

	)

1291 
	#V4L2_DV_FL_IS_CE_VIDEO
 (1 << 4)

	)

1294 
	#V4L2_DV_BT_BLANKING_WIDTH
(
bt
) \

1295 ((
bt
)->
h‰⁄ç‹ch
 + (bt)->
hsync
 + (bt)->
hbackp‹ch
)

	)

1296 
	#V4L2_DV_BT_FRAME_WIDTH
(
bt
) \

1297 ((
bt
)->
width
 + 
	`V4L2_DV_BT_BLANKING_WIDTH
(bt))

	)

1298 
	#V4L2_DV_BT_BLANKING_HEIGHT
(
bt
) \

1299 ((
bt
)->
v‰⁄ç‹ch
 + (bt)->
vsync
 + (bt)->
vbackp‹ch
 + \

1300 (
bt
)->
û_v‰⁄ç‹ch
 + (bt)->
û_vsync
 + (bt)->
û_vbackp‹ch
)

	)

1301 
	#V4L2_DV_BT_FRAME_HEIGHT
(
bt
) \

1302 ((
bt
)->
height
 + 
	`V4L2_DV_BT_BLANKING_HEIGHT
(bt))

	)

1308 
	sv4l2_dv_timögs
 {

1309 
__u32
 
	mty≥
;

1311 
v4l2_bt_timögs
 
	mbt
;

1312 
__u32
 
	mª£rved
[32];

1314 } 
__©åibuã__
 ((
∑cked
));

1317 
	#V4L2_DV_BT_656_1120
 0

	)

1327 
	sv4l2_íum_dv_timögs
 {

1328 
__u32
 
	mödex
;

1329 
__u32
 
	m∑d
;

1330 
__u32
 
	mª£rved
[2];

1331 
v4l2_dv_timögs
 
	mtimögs
;

1345 
	sv4l2_bt_timögs_ˇp
 {

1346 
__u32
 
	mmö_width
;

1347 
__u32
 
	mmax_width
;

1348 
__u32
 
	mmö_height
;

1349 
__u32
 
	mmax_height
;

1350 
__u64
 
	mmö_pixñ˛ock
;

1351 
__u64
 
	mmax_pixñ˛ock
;

1352 
__u32
 
	m°™d¨ds
;

1353 
__u32
 
	mˇ∑bûôõs
;

1354 
__u32
 
	mª£rved
[16];

1355 } 
__©åibuã__
 ((
∑cked
));

1358 
	#V4L2_DV_BT_CAP_INTERLACED
 (1 << 0)

	)

1360 
	#V4L2_DV_BT_CAP_PROGRESSIVE
 (1 << 1)

	)

1362 
	#V4L2_DV_BT_CAP_REDUCED_BLANKING
 (1 << 2)

	)

1364 
	#V4L2_DV_BT_CAP_CUSTOM
 (1 << 3)

	)

1372 
	sv4l2_dv_timögs_ˇp
 {

1373 
__u32
 
	mty≥
;

1374 
__u32
 
	m∑d
;

1375 
__u32
 
	mª£rved
[2];

1377 
v4l2_bt_timögs_ˇp
 
	mbt
;

1378 
__u32
 
	møw_d©a
[32];

1386 
	sv4l2_öput
 {

1387 
__u32
 
	mödex
;

1388 
__u8
 
	m«me
[32];

1389 
__u32
 
	mty≥
;

1390 
__u32
 
	maudio£t
;

1391 
__u32
 
	mtu√r
;

1392 
v4l2_°d_id
 
	m°d
;

1393 
__u32
 
	m°©us
;

1394 
__u32
 
	mˇ∑bûôõs
;

1395 
__u32
 
	mª£rved
[3];

1399 
	#V4L2_INPUT_TYPE_TUNER
 1

	)

1400 
	#V4L2_INPUT_TYPE_CAMERA
 2

	)

1403 
	#V4L2_IN_ST_NO_POWER
 0x00000001

	)

1404 
	#V4L2_IN_ST_NO_SIGNAL
 0x00000002

	)

1405 
	#V4L2_IN_ST_NO_COLOR
 0x00000004

	)

1409 
	#V4L2_IN_ST_HFLIP
 0x00000010

	)

1410 
	#V4L2_IN_ST_VFLIP
 0x00000020

	)

1413 
	#V4L2_IN_ST_NO_H_LOCK
 0x00000100

	)

1414 
	#V4L2_IN_ST_COLOR_KILL
 0x00000200

	)

1417 
	#V4L2_IN_ST_NO_SYNC
 0x00010000

	)

1418 
	#V4L2_IN_ST_NO_EQU
 0x00020000

	)

1419 
	#V4L2_IN_ST_NO_CARRIER
 0x00040000

	)

1422 
	#V4L2_IN_ST_MACROVISION
 0x01000000

	)

1423 
	#V4L2_IN_ST_NO_ACCESS
 0x02000000

	)

1424 
	#V4L2_IN_ST_VTR
 0x04000000

	)

1427 
	#V4L2_IN_CAP_DV_TIMINGS
 0x00000002

	)

1428 
	#V4L2_IN_CAP_CUSTOM_TIMINGS
 
V4L2_IN_CAP_DV_TIMINGS


	)

1429 
	#V4L2_IN_CAP_STD
 0x00000004

	)

1430 
	#V4L2_IN_CAP_NATIVE_SIZE
 0x00000008

	)

1435 
	sv4l2_ouçut
 {

1436 
__u32
 
	mödex
;

1437 
__u8
 
	m«me
[32];

1438 
__u32
 
	mty≥
;

1439 
__u32
 
	maudio£t
;

1440 
__u32
 
	mmoduœt‹
;

1441 
v4l2_°d_id
 
	m°d
;

1442 
__u32
 
	mˇ∑bûôõs
;

1443 
__u32
 
	mª£rved
[3];

1446 
	#V4L2_OUTPUT_TYPE_MODULATOR
 1

	)

1447 
	#V4L2_OUTPUT_TYPE_ANALOG
 2

	)

1448 
	#V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY
 3

	)

1451 
	#V4L2_OUT_CAP_DV_TIMINGS
 0x00000002

	)

1452 
	#V4L2_OUT_CAP_CUSTOM_TIMINGS
 
V4L2_OUT_CAP_DV_TIMINGS


	)

1453 
	#V4L2_OUT_CAP_STD
 0x00000004

	)

1454 
	#V4L2_OUT_CAP_NATIVE_SIZE
 0x00000008

	)

1459 
	sv4l2_c⁄åﬁ
 {

1460 
__u32
 
	mid
;

1461 
__s32
 
	mvÆue
;

1464 
	sv4l2_ext_c⁄åﬁ
 {

1465 
__u32
 
	mid
;

1466 
__u32
 
	msize
;

1467 
__u32
 
	mª£rved2
[1];

1469 
__s32
 
	mvÆue
;

1470 
__s64
 
	mvÆue64
;

1471 *
	m°rög
;

1472 
__u8
 *
	mp_u8
;

1473 
__u16
 *
	mp_u16
;

1474 
__u32
 *
	mp_u32
;

1475 *
	m±r
;

1477 } 
__©åibuã__
 ((
∑cked
));

1479 
	sv4l2_ext_c⁄åﬁs
 {

1480 
__u32
 
	m˘æ_˛ass
;

1481 
__u32
 
	mcou¡
;

1482 
__u32
 
	mîr‹_idx
;

1483 
__u32
 
	mª£rved
[2];

1484 
v4l2_ext_c⁄åﬁ
 *
	mc⁄åﬁs
;

1487 
	#V4L2_CTRL_ID_MASK
 (0x0fffffff)

	)

1488 
	#V4L2_CTRL_ID2CLASS
(
id
Ë((idË& 0x0fff0000UL)

	)

1489 
	#V4L2_CTRL_DRIVER_PRIV
(
id
Ë(((idË& 0xffffË>0x1000)

	)

1490 
	#V4L2_CTRL_MAX_DIMS
 (4)

	)

1492 
	ev4l2_˘æ_ty≥
 {

1493 
	mV4L2_CTRL_TYPE_INTEGER
 = 1,

1494 
	mV4L2_CTRL_TYPE_BOOLEAN
 = 2,

1495 
	mV4L2_CTRL_TYPE_MENU
 = 3,

1496 
	mV4L2_CTRL_TYPE_BUTTON
 = 4,

1497 
	mV4L2_CTRL_TYPE_INTEGER64
 = 5,

1498 
	mV4L2_CTRL_TYPE_CTRL_CLASS
 = 6,

1499 
	mV4L2_CTRL_TYPE_STRING
 = 7,

1500 
	mV4L2_CTRL_TYPE_BITMASK
 = 8,

1501 
	mV4L2_CTRL_TYPE_INTEGER_MENU
 = 9,

1504 
	mV4L2_CTRL_COMPOUND_TYPES
 = 0x0100,

1505 
	mV4L2_CTRL_TYPE_U8
 = 0x0100,

1506 
	mV4L2_CTRL_TYPE_U16
 = 0x0101,

1507 
	mV4L2_CTRL_TYPE_U32
 = 0x0102,

1511 
	sv4l2_quîy˘æ
 {

1512 
__u32
 
	mid
;

1513 
__u32
 
	mty≥
;

1514 
__u8
 
	m«me
[32];

1515 
__s32
 
	mmöimum
;

1516 
__s32
 
	mmaximum
;

1517 
__s32
 
	m°ï
;

1518 
__s32
 
	mdeÁu…_vÆue
;

1519 
__u32
 
	mÊags
;

1520 
__u32
 
	mª£rved
[2];

1524 
	sv4l2_quîy_ext_˘æ
 {

1525 
__u32
 
	mid
;

1526 
__u32
 
	mty≥
;

1527 
	m«me
[32];

1528 
__s64
 
	mmöimum
;

1529 
__s64
 
	mmaximum
;

1530 
__u64
 
	m°ï
;

1531 
__s64
 
	mdeÁu…_vÆue
;

1532 
__u32
 
	mÊags
;

1533 
__u32
 
	mñem_size
;

1534 
__u32
 
	mñems
;

1535 
__u32
 
	mƒ_of_dims
;

1536 
__u32
 
	mdims
[
V4L2_CTRL_MAX_DIMS
];

1537 
__u32
 
	mª£rved
[32];

1541 
	sv4l2_quîymíu
 {

1542 
__u32
 
	mid
;

1543 
__u32
 
	mödex
;

1545 
__u8
 
	m«me
[32];

1546 
__s64
 
	mvÆue
;

1548 
__u32
 
	mª£rved
;

1549 } 
__©åibuã__
 ((
∑cked
));

1552 
	#V4L2_CTRL_FLAG_DISABLED
 0x0001

	)

1553 
	#V4L2_CTRL_FLAG_GRABBED
 0x0002

	)

1554 
	#V4L2_CTRL_FLAG_READ_ONLY
 0x0004

	)

1555 
	#V4L2_CTRL_FLAG_UPDATE
 0x0008

	)

1556 
	#V4L2_CTRL_FLAG_INACTIVE
 0x0010

	)

1557 
	#V4L2_CTRL_FLAG_SLIDER
 0x0020

	)

1558 
	#V4L2_CTRL_FLAG_WRITE_ONLY
 0x0040

	)

1559 
	#V4L2_CTRL_FLAG_VOLATILE
 0x0080

	)

1560 
	#V4L2_CTRL_FLAG_HAS_PAYLOAD
 0x0100

	)

1561 
	#V4L2_CTRL_FLAG_EXECUTE_ON_WRITE
 0x0200

	)

1564 
	#V4L2_CTRL_FLAG_NEXT_CTRL
 0x80000000

	)

1565 
	#V4L2_CTRL_FLAG_NEXT_COMPOUND
 0x40000000

	)

1568 
	#V4L2_CID_MAX_CTRLS
 1024

	)

1570 
	#V4L2_CID_PRIVATE_BASE
 0x08000000

	)

1576 
	sv4l2_tu√r
 {

1577 
__u32
 
	mödex
;

1578 
__u8
 
	m«me
[32];

1579 
__u32
 
	mty≥
;

1580 
__u32
 
	mˇ∑bûôy
;

1581 
__u32
 
	møngñow
;

1582 
__u32
 
	møngehigh
;

1583 
__u32
 
	mrxsubch™s
;

1584 
__u32
 
	maudmode
;

1585 
__s32
 
	msig«l
;

1586 
__s32
 
	mafc
;

1587 
__u32
 
	mª£rved
[4];

1590 
	sv4l2_moduœt‹
 {

1591 
__u32
 
	mödex
;

1592 
__u8
 
	m«me
[32];

1593 
__u32
 
	mˇ∑bûôy
;

1594 
__u32
 
	møngñow
;

1595 
__u32
 
	møngehigh
;

1596 
__u32
 
	mtxsubch™s
;

1597 
__u32
 
	mty≥
;

1598 
__u32
 
	mª£rved
[3];

1602 
	#V4L2_TUNER_CAP_LOW
 0x0001

	)

1603 
	#V4L2_TUNER_CAP_NORM
 0x0002

	)

1604 
	#V4L2_TUNER_CAP_HWSEEK_BOUNDED
 0x0004

	)

1605 
	#V4L2_TUNER_CAP_HWSEEK_WRAP
 0x0008

	)

1606 
	#V4L2_TUNER_CAP_STEREO
 0x0010

	)

1607 
	#V4L2_TUNER_CAP_LANG2
 0x0020

	)

1608 
	#V4L2_TUNER_CAP_SAP
 0x0020

	)

1609 
	#V4L2_TUNER_CAP_LANG1
 0x0040

	)

1610 
	#V4L2_TUNER_CAP_RDS
 0x0080

	)

1611 
	#V4L2_TUNER_CAP_RDS_BLOCK_IO
 0x0100

	)

1612 
	#V4L2_TUNER_CAP_RDS_CONTROLS
 0x0200

	)

1613 
	#V4L2_TUNER_CAP_FREQ_BANDS
 0x0400

	)

1614 
	#V4L2_TUNER_CAP_HWSEEK_PROG_LIM
 0x0800

	)

1615 
	#V4L2_TUNER_CAP_1HZ
 0x1000

	)

1618 
	#V4L2_TUNER_SUB_MONO
 0x0001

	)

1619 
	#V4L2_TUNER_SUB_STEREO
 0x0002

	)

1620 
	#V4L2_TUNER_SUB_LANG2
 0x0004

	)

1621 
	#V4L2_TUNER_SUB_SAP
 0x0004

	)

1622 
	#V4L2_TUNER_SUB_LANG1
 0x0008

	)

1623 
	#V4L2_TUNER_SUB_RDS
 0x0010

	)

1626 
	#V4L2_TUNER_MODE_MONO
 0x0000

	)

1627 
	#V4L2_TUNER_MODE_STEREO
 0x0001

	)

1628 
	#V4L2_TUNER_MODE_LANG2
 0x0002

	)

1629 
	#V4L2_TUNER_MODE_SAP
 0x0002

	)

1630 
	#V4L2_TUNER_MODE_LANG1
 0x0003

	)

1631 
	#V4L2_TUNER_MODE_LANG1_LANG2
 0x0004

	)

1633 
	sv4l2_‰equícy
 {

1634 
__u32
 
	mtu√r
;

1635 
__u32
 
	mty≥
;

1636 
__u32
 
	m‰equícy
;

1637 
__u32
 
	mª£rved
[8];

1640 
	#V4L2_BAND_MODULATION_VSB
 (1 << 1)

	)

1641 
	#V4L2_BAND_MODULATION_FM
 (1 << 2)

	)

1642 
	#V4L2_BAND_MODULATION_AM
 (1 << 3)

	)

1644 
	sv4l2_‰equícy_b™d
 {

1645 
__u32
 
	mtu√r
;

1646 
__u32
 
	mty≥
;

1647 
__u32
 
	mödex
;

1648 
__u32
 
	mˇ∑bûôy
;

1649 
__u32
 
	møngñow
;

1650 
__u32
 
	møngehigh
;

1651 
__u32
 
	mmoduœti⁄
;

1652 
__u32
 
	mª£rved
[9];

1655 
	sv4l2_hw_‰eq_£ek
 {

1656 
__u32
 
	mtu√r
;

1657 
__u32
 
	mty≥
;

1658 
__u32
 
	m£ek_upw¨d
;

1659 
__u32
 
	mwøp_¨ound
;

1660 
__u32
 
	m•acög
;

1661 
__u32
 
	møngñow
;

1662 
__u32
 
	møngehigh
;

1663 
__u32
 
	mª£rved
[5];

1670 
	sv4l2_rds_d©a
 {

1671 
__u8
 
	mlsb
;

1672 
__u8
 
	mmsb
;

1673 
__u8
 
	mblock
;

1674 } 
__©åibuã__
 ((
∑cked
));

1676 
	#V4L2_RDS_BLOCK_MSK
 0x7

	)

1677 
	#V4L2_RDS_BLOCK_A
 0

	)

1678 
	#V4L2_RDS_BLOCK_B
 1

	)

1679 
	#V4L2_RDS_BLOCK_C
 2

	)

1680 
	#V4L2_RDS_BLOCK_D
 3

	)

1681 
	#V4L2_RDS_BLOCK_C_ALT
 4

	)

1682 
	#V4L2_RDS_BLOCK_INVALID
 7

	)

1684 
	#V4L2_RDS_BLOCK_CORRECTED
 0x40

	)

1685 
	#V4L2_RDS_BLOCK_ERROR
 0x80

	)

1690 
	sv4l2_audio
 {

1691 
__u32
 
	mödex
;

1692 
__u8
 
	m«me
[32];

1693 
__u32
 
	mˇ∑bûôy
;

1694 
__u32
 
	mmode
;

1695 
__u32
 
	mª£rved
[2];

1699 
	#V4L2_AUDCAP_STEREO
 0x00001

	)

1700 
	#V4L2_AUDCAP_AVL
 0x00002

	)

1703 
	#V4L2_AUDMODE_AVL
 0x00001

	)

1705 
	sv4l2_audioout
 {

1706 
__u32
 
	mödex
;

1707 
__u8
 
	m«me
[32];

1708 
__u32
 
	mˇ∑bûôy
;

1709 
__u32
 
	mmode
;

1710 
__u32
 
	mª£rved
[2];

1719 
	#V4L2_ENC_IDX_FRAME_I
 (0)

	)

1720 
	#V4L2_ENC_IDX_FRAME_P
 (1)

	)

1721 
	#V4L2_ENC_IDX_FRAME_B
 (2)

	)

1722 
	#V4L2_ENC_IDX_FRAME_MASK
 (0xf)

	)

1724 
	sv4l2_íc_idx_íåy
 {

1725 
__u64
 
	moff£t
;

1726 
__u64
 
	m±s
;

1727 
__u32
 
	mÀngth
;

1728 
__u32
 
	mÊags
;

1729 
__u32
 
	mª£rved
[2];

1732 
	#V4L2_ENC_IDX_ENTRIES
 (64)

	)

1733 
	sv4l2_íc_idx
 {

1734 
__u32
 
	míåõs
;

1735 
__u32
 
	míåõs_ˇp
;

1736 
__u32
 
	mª£rved
[4];

1737 
v4l2_íc_idx_íåy
 
	míåy
[
V4L2_ENC_IDX_ENTRIES
];

1741 
	#V4L2_ENC_CMD_START
 (0)

	)

1742 
	#V4L2_ENC_CMD_STOP
 (1)

	)

1743 
	#V4L2_ENC_CMD_PAUSE
 (2)

	)

1744 
	#V4L2_ENC_CMD_RESUME
 (3)

	)

1747 
	#V4L2_ENC_CMD_STOP_AT_GOP_END
 (1 << 0)

	)

1749 
	sv4l2_ícodî_cmd
 {

1750 
__u32
 
	mcmd
;

1751 
__u32
 
	mÊags
;

1754 
__u32
 
	md©a
[8];

1755 } 
	møw
;

1760 
	#V4L2_DEC_CMD_START
 (0)

	)

1761 
	#V4L2_DEC_CMD_STOP
 (1)

	)

1762 
	#V4L2_DEC_CMD_PAUSE
 (2)

	)

1763 
	#V4L2_DEC_CMD_RESUME
 (3)

	)

1766 
	#V4L2_DEC_CMD_START_MUTE_AUDIO
 (1 << 0)

	)

1769 
	#V4L2_DEC_CMD_PAUSE_TO_BLACK
 (1 << 0)

	)

1772 
	#V4L2_DEC_CMD_STOP_TO_BLACK
 (1 << 0)

	)

1773 
	#V4L2_DEC_CMD_STOP_IMMEDIATELY
 (1 << 1)

	)

1778 
	#V4L2_DEC_START_FMT_NONE
 (0)

	)

1780 
	#V4L2_DEC_START_FMT_GOP
 (1)

	)

1784 
	sv4l2_decodî_cmd
 {

1785 
__u32
 
	mcmd
;

1786 
__u32
 
	mÊags
;

1789 
__u64
 
	m±s
;

1790 } 
	m°›
;

1798 
__s32
 
	m•ìd
;

1799 
__u32
 
	mf‹m©
;

1800 } 
	m°¨t
;

1803 
__u32
 
	md©a
[16];

1804 } 
	møw
;

1817 
	sv4l2_vbi_f‹m©
 {

1818 
__u32
 
	mßm∂ög_øã
;

1819 
__u32
 
	moff£t
;

1820 
__u32
 
	mßm∂es_≥r_löe
;

1821 
__u32
 
	mßm∂e_f‹m©
;

1822 
__s32
 
	m°¨t
[2];

1823 
__u32
 
	mcou¡
[2];

1824 
__u32
 
	mÊags
;

1825 
__u32
 
	mª£rved
[2];

1829 
	#V4L2_VBI_UNSYNC
 (1 << 0)

	)

1830 
	#V4L2_VBI_INTERLACED
 (1 << 1)

	)

1833 
	#V4L2_VBI_ITU_525_F1_START
 (1)

	)

1834 
	#V4L2_VBI_ITU_525_F2_START
 (264)

	)

1835 
	#V4L2_VBI_ITU_625_F1_START
 (1)

	)

1836 
	#V4L2_VBI_ITU_625_F2_START
 (314)

	)

1845 
	sv4l2_¶i˚d_vbi_f‹m©
 {

1846 
__u16
 
	m£rvi˚_£t
;

1851 
__u16
 
	m£rvi˚_löes
[2][24];

1852 
__u32
 
	mio_size
;

1853 
__u32
 
	mª£rved
[2];

1858 
	#V4L2_SLICED_TELETEXT_B
 (0x0001)

	)

1860 
	#V4L2_SLICED_VPS
 (0x0400)

	)

1862 
	#V4L2_SLICED_CAPTION_525
 (0x1000)

	)

1864 
	#V4L2_SLICED_WSS_625
 (0x4000)

	)

1866 
	#V4L2_SLICED_VBI_525
 (
V4L2_SLICED_CAPTION_525
)

	)

1867 
	#V4L2_SLICED_VBI_625
 (
V4L2_SLICED_TELETEXT_B
 | 
V4L2_SLICED_VPS
 | 
V4L2_SLICED_WSS_625
)

	)

1869 
	sv4l2_¶i˚d_vbi_ˇp
 {

1870 
__u16
 
	m£rvi˚_£t
;

1875 
__u16
 
	m£rvi˚_löes
[2][24];

1876 
__u32
 
	mty≥
;

1877 
__u32
 
	mª£rved
[3];

1880 
	sv4l2_¶i˚d_vbi_d©a
 {

1881 
__u32
 
	mid
;

1882 
__u32
 
	mfõld
;

1883 
__u32
 
	mlöe
;

1884 
__u32
 
	mª£rved
;

1885 
__u8
 
	md©a
[48];

1905 
	#V4L2_MPEG_VBI_IVTV_TELETEXT_B
 (1)

	)

1906 
	#V4L2_MPEG_VBI_IVTV_CAPTION_525
 (4)

	)

1907 
	#V4L2_MPEG_VBI_IVTV_WSS_625
 (5)

	)

1908 
	#V4L2_MPEG_VBI_IVTV_VPS
 (7)

	)

1910 
	sv4l2_m≥g_vbi_ôv0_löe
 {

1911 
__u8
 
	mid
;

1912 
__u8
 
	md©a
[42];

1913 } 
__©åibuã__
 ((
∑cked
));

1915 
	sv4l2_m≥g_vbi_ôv0
 {

1916 
__À32
 
	mlöemask
[2];

1917 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[35];

1918 } 
__©åibuã__
 ((
∑cked
));

1920 
	sv4l2_m≥g_vbi_ITV0
 {

1921 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[36];

1922 } 
__©åibuã__
 ((
∑cked
));

1924 
	#V4L2_MPEG_VBI_IVTV_MAGIC0
 "ôv0"

	)

1925 
	#V4L2_MPEG_VBI_IVTV_MAGIC1
 "ITV0"

	)

1927 
	sv4l2_m≥g_vbi_fmt_ivtv
 {

1928 
__u8
 
	mmagic
[4];

1930 
v4l2_m≥g_vbi_ôv0
 
	môv0
;

1931 
v4l2_m≥g_vbi_ITV0
 
	mITV0
;

1933 } 
__©åibuã__
 ((
∑cked
));

1946 
	sv4l2_∂™e_pix_f‹m©
 {

1947 
__u32
 
	msizeimage
;

1948 
__u32
 
	mbyã•îlöe
;

1949 
__u16
 
	mª£rved
[6];

1950 } 
__©åibuã__
 ((
∑cked
));

1966 
	sv4l2_pix_f‹m©_m∂™e
 {

1967 
__u32
 
	mwidth
;

1968 
__u32
 
	mheight
;

1969 
__u32
 
	mpixñf‹m©
;

1970 
__u32
 
	mfõld
;

1971 
__u32
 
	mcﬁ‹•a˚
;

1973 
v4l2_∂™e_pix_f‹m©
 
	m∂™e_fmt
[
VIDEO_MAX_PLANES
];

1974 
__u8
 
	mnum_∂™es
;

1975 
__u8
 
	mÊags
;

1976 
__u8
 
	mycb¸_íc
;

1977 
__u8
 
	mqu™tiz©i⁄
;

1978 
__u8
 
	mx„r_func
;

1979 
__u8
 
	mª£rved
[7];

1980 } 
__©åibuã__
 ((
∑cked
));

1987 
	sv4l2_sdr_f‹m©
 {

1988 
__u32
 
	mpixñf‹m©
;

1989 
__u32
 
	mbuf„rsize
;

1990 
__u8
 
	mª£rved
[24];

1991 } 
__©åibuã__
 ((
∑cked
));

2003 
	sv4l2_f‹m©
 {

2004 
__u32
 
	mty≥
;

2006 
v4l2_pix_f‹m©
 
	mpix
;

2007 
v4l2_pix_f‹m©_m∂™e
 
	mpix_mp
;

2008 
v4l2_wödow
 
	mwö
;

2009 
v4l2_vbi_f‹m©
 
	mvbi
;

2010 
v4l2_¶i˚d_vbi_f‹m©
 
	m¶i˚d
;

2011 
v4l2_sdr_f‹m©
 
	msdr
;

2012 
__u8
 
	møw_d©a
[200];

2013 } 
	mfmt
;

2018 
	sv4l2_°ªam∑rm
 {

2019 
__u32
 
	mty≥
;

2021 
v4l2_ˇ±uª∑rm
 
	mˇ±uª
;

2022 
v4l2_ouçuç¨m
 
	mouçut
;

2023 
__u8
 
	møw_d©a
[200];

2024 } 
	m∑rm
;

2031 
	#V4L2_EVENT_ALL
 0

	)

2032 
	#V4L2_EVENT_VSYNC
 1

	)

2033 
	#V4L2_EVENT_EOS
 2

	)

2034 
	#V4L2_EVENT_CTRL
 3

	)

2035 
	#V4L2_EVENT_FRAME_SYNC
 4

	)

2036 
	#V4L2_EVENT_SOURCE_CHANGE
 5

	)

2037 
	#V4L2_EVENT_MOTION_DET
 6

	)

2038 
	#V4L2_EVENT_PRIVATE_START
 0x08000000

	)

2041 
	sv4l2_evít_vsync
 {

2043 
__u8
 
	mfõld
;

2044 } 
__©åibuã__
 ((
∑cked
));

2047 
	#V4L2_EVENT_CTRL_CH_VALUE
 (1 << 0)

	)

2048 
	#V4L2_EVENT_CTRL_CH_FLAGS
 (1 << 1)

	)

2049 
	#V4L2_EVENT_CTRL_CH_RANGE
 (1 << 2)

	)

2051 
	sv4l2_evít_˘æ
 {

2052 
__u32
 
	mch™ges
;

2053 
__u32
 
	mty≥
;

2055 
__s32
 
	mvÆue
;

2056 
__s64
 
	mvÆue64
;

2058 
__u32
 
	mÊags
;

2059 
__s32
 
	mmöimum
;

2060 
__s32
 
	mmaximum
;

2061 
__s32
 
	m°ï
;

2062 
__s32
 
	mdeÁu…_vÆue
;

2065 
	sv4l2_evít_‰ame_sync
 {

2066 
__u32
 
	m‰ame_£quí˚
;

2069 
	#V4L2_EVENT_SRC_CH_RESOLUTION
 (1 << 0)

	)

2071 
	sv4l2_evít_§c_ch™ge
 {

2072 
__u32
 
	mch™ges
;

2075 
	#V4L2_EVENT_MD_FL_HAVE_FRAME_SEQ
 (1 << 0)

	)

2084 
	sv4l2_evít_mŸi⁄_dë
 {

2085 
__u32
 
	mÊags
;

2086 
__u32
 
	m‰ame_£quí˚
;

2087 
__u32
 
	mªgi⁄_mask
;

2090 
	sv4l2_evít
 {

2091 
__u32
 
	mty≥
;

2093 
v4l2_evít_vsync
 
	mvsync
;

2094 
v4l2_evít_˘æ
 
	m˘æ
;

2095 
v4l2_evít_‰ame_sync
 
	m‰ame_sync
;

2096 
v4l2_evít_§c_ch™ge
 
	m§c_ch™ge
;

2097 
v4l2_evít_mŸi⁄_dë
 
	mmŸi⁄_dë
;

2098 
__u8
 
	md©a
[64];

2099 } 
	mu
;

2100 
__u32
 
	m≥ndög
;

2101 
__u32
 
	m£quí˚
;

2102 
time•ec
 
	mtime°amp
;

2103 
__u32
 
	mid
;

2104 
__u32
 
	mª£rved
[8];

2107 
	#V4L2_EVENT_SUB_FL_SEND_INITIAL
 (1 << 0)

	)

2108 
	#V4L2_EVENT_SUB_FL_ALLOW_FEEDBACK
 (1 << 1)

	)

2110 
	sv4l2_evít_subs¸ùti⁄
 {

2111 
__u32
 
	mty≥
;

2112 
__u32
 
	mid
;

2113 
__u32
 
	mÊags
;

2114 
__u32
 
	mª£rved
[5];

2126 
	#V4L2_CHIP_MATCH_BRIDGE
 0

	)

2127 
	#V4L2_CHIP_MATCH_SUBDEV
 4

	)

2130 
	#V4L2_CHIP_MATCH_HOST
 
V4L2_CHIP_MATCH_BRIDGE


	)

2131 
	#V4L2_CHIP_MATCH_I2C_DRIVER
 1

	)

2132 
	#V4L2_CHIP_MATCH_I2C_ADDR
 2

	)

2133 
	#V4L2_CHIP_MATCH_AC97
 3

	)

2135 
	sv4l2_dbg_m©ch
 {

2136 
__u32
 
	mty≥
;

2138 
__u32
 
	maddr
;

2139 
	m«me
[32];

2141 } 
__©åibuã__
 ((
∑cked
));

2143 
	sv4l2_dbg_ªgi°î
 {

2144 
v4l2_dbg_m©ch
 
	mm©ch
;

2145 
__u32
 
	msize
;

2146 
__u64
 
	mªg
;

2147 
__u64
 
	mvÆ
;

2148 } 
__©åibuã__
 ((
∑cked
));

2150 
	#V4L2_CHIP_FL_READABLE
 (1 << 0)

	)

2151 
	#V4L2_CHIP_FL_WRITABLE
 (1 << 1)

	)

2154 
	sv4l2_dbg_chù_öfo
 {

2155 
v4l2_dbg_m©ch
 
	mm©ch
;

2156 
	m«me
[32];

2157 
__u32
 
	mÊags
;

2158 
__u32
 
	mª£rved
[32];

2159 } 
__©åibuã__
 ((
∑cked
));

2170 
	sv4l2_¸óã_buf„rs
 {

2171 
__u32
 
	mödex
;

2172 
__u32
 
	mcou¡
;

2173 
__u32
 
	mmem‹y
;

2174 
v4l2_f‹m©
 
	mf‹m©
;

2175 
__u32
 
	mª£rved
[8];

2182 
	#VIDIOC_QUERYCAP
 
	`_IOR
('V', 0, 
v4l2_ˇ∑bûôy
)

	)

2183 
	#VIDIOC_RESERVED
 
	`_IO
('V', 1)

	)

2184 
	#VIDIOC_ENUM_FMT
 
	`_IOWR
('V', 2, 
v4l2_fmtdesc
)

	)

2185 
	#VIDIOC_G_FMT
 
	`_IOWR
('V', 4, 
v4l2_f‹m©
)

	)

2186 
	#VIDIOC_S_FMT
 
	`_IOWR
('V', 5, 
v4l2_f‹m©
)

	)

2187 
	#VIDIOC_REQBUFS
 
	`_IOWR
('V', 8, 
v4l2_ªque°buf„rs
)

	)

2188 
	#VIDIOC_QUERYBUF
 
	`_IOWR
('V', 9, 
v4l2_buf„r
)

	)

2189 
	#VIDIOC_G_FBUF
 
	`_IOR
('V', 10, 
v4l2_‰amebuf„r
)

	)

2190 
	#VIDIOC_S_FBUF
 
	`_IOW
('V', 11, 
v4l2_‰amebuf„r
)

	)

2191 
	#VIDIOC_OVERLAY
 
	`_IOW
('V', 14, )

	)

2192 
	#VIDIOC_QBUF
 
	`_IOWR
('V', 15, 
v4l2_buf„r
)

	)

2193 
	#VIDIOC_EXPBUF
 
	`_IOWR
('V', 16, 
v4l2_exp‹tbuf„r
)

	)

2194 
	#VIDIOC_DQBUF
 
	`_IOWR
('V', 17, 
v4l2_buf„r
)

	)

2195 
	#VIDIOC_STREAMON
 
	`_IOW
('V', 18, )

	)

2196 
	#VIDIOC_STREAMOFF
 
	`_IOW
('V', 19, )

	)

2197 
	#VIDIOC_G_PARM
 
	`_IOWR
('V', 21, 
v4l2_°ªam∑rm
)

	)

2198 
	#VIDIOC_S_PARM
 
	`_IOWR
('V', 22, 
v4l2_°ªam∑rm
)

	)

2199 
	#VIDIOC_G_STD
 
	`_IOR
('V', 23, 
v4l2_°d_id
)

	)

2200 
	#VIDIOC_S_STD
 
	`_IOW
('V', 24, 
v4l2_°d_id
)

	)

2201 
	#VIDIOC_ENUMSTD
 
	`_IOWR
('V', 25, 
v4l2_°™d¨d
)

	)

2202 
	#VIDIOC_ENUMINPUT
 
	`_IOWR
('V', 26, 
v4l2_öput
)

	)

2203 
	#VIDIOC_G_CTRL
 
	`_IOWR
('V', 27, 
v4l2_c⁄åﬁ
)

	)

2204 
	#VIDIOC_S_CTRL
 
	`_IOWR
('V', 28, 
v4l2_c⁄åﬁ
)

	)

2205 
	#VIDIOC_G_TUNER
 
	`_IOWR
('V', 29, 
v4l2_tu√r
)

	)

2206 
	#VIDIOC_S_TUNER
 
	`_IOW
('V', 30, 
v4l2_tu√r
)

	)

2207 
	#VIDIOC_G_AUDIO
 
	`_IOR
('V', 33, 
v4l2_audio
)

	)

2208 
	#VIDIOC_S_AUDIO
 
	`_IOW
('V', 34, 
v4l2_audio
)

	)

2209 
	#VIDIOC_QUERYCTRL
 
	`_IOWR
('V', 36, 
v4l2_quîy˘æ
)

	)

2210 
	#VIDIOC_QUERYMENU
 
	`_IOWR
('V', 37, 
v4l2_quîymíu
)

	)

2211 
	#VIDIOC_G_INPUT
 
	`_IOR
('V', 38, )

	)

2212 
	#VIDIOC_S_INPUT
 
	`_IOWR
('V', 39, )

	)

2213 
	#VIDIOC_G_EDID
 
	`_IOWR
('V', 40, 
v4l2_edid
)

	)

2214 
	#VIDIOC_S_EDID
 
	`_IOWR
('V', 41, 
v4l2_edid
)

	)

2215 
	#VIDIOC_G_OUTPUT
 
	`_IOR
('V', 46, )

	)

2216 
	#VIDIOC_S_OUTPUT
 
	`_IOWR
('V', 47, )

	)

2217 
	#VIDIOC_ENUMOUTPUT
 
	`_IOWR
('V', 48, 
v4l2_ouçut
)

	)

2218 
	#VIDIOC_G_AUDOUT
 
	`_IOR
('V', 49, 
v4l2_audioout
)

	)

2219 
	#VIDIOC_S_AUDOUT
 
	`_IOW
('V', 50, 
v4l2_audioout
)

	)

2220 
	#VIDIOC_G_MODULATOR
 
	`_IOWR
('V', 54, 
v4l2_moduœt‹
)

	)

2221 
	#VIDIOC_S_MODULATOR
 
	`_IOW
('V', 55, 
v4l2_moduœt‹
)

	)

2222 
	#VIDIOC_G_FREQUENCY
 
	`_IOWR
('V', 56, 
v4l2_‰equícy
)

	)

2223 
	#VIDIOC_S_FREQUENCY
 
	`_IOW
('V', 57, 
v4l2_‰equícy
)

	)

2224 
	#VIDIOC_CROPCAP
 
	`_IOWR
('V', 58, 
v4l2_¸›ˇp
)

	)

2225 
	#VIDIOC_G_CROP
 
	`_IOWR
('V', 59, 
v4l2_¸›
)

	)

2226 
	#VIDIOC_S_CROP
 
	`_IOW
('V', 60, 
v4l2_¸›
)

	)

2227 
	#VIDIOC_G_JPEGCOMP
 
	`_IOR
('V', 61, 
v4l2_j≥gcom¥essi⁄
)

	)

2228 
	#VIDIOC_S_JPEGCOMP
 
	`_IOW
('V', 62, 
v4l2_j≥gcom¥essi⁄
)

	)

2229 
	#VIDIOC_QUERYSTD
 
	`_IOR
('V', 63, 
v4l2_°d_id
)

	)

2230 
	#VIDIOC_TRY_FMT
 
	`_IOWR
('V', 64, 
v4l2_f‹m©
)

	)

2231 
	#VIDIOC_ENUMAUDIO
 
	`_IOWR
('V', 65, 
v4l2_audio
)

	)

2232 
	#VIDIOC_ENUMAUDOUT
 
	`_IOWR
('V', 66, 
v4l2_audioout
)

	)

2233 
	#VIDIOC_G_PRIORITY
 
	`_IOR
('V', 67, 
__u32
Ë

	)

2234 
	#VIDIOC_S_PRIORITY
 
	`_IOW
('V', 68, 
__u32
Ë

	)

2235 
	#VIDIOC_G_SLICED_VBI_CAP
 
	`_IOWR
('V', 69, 
v4l2_¶i˚d_vbi_ˇp
)

	)

2236 
	#VIDIOC_LOG_STATUS
 
	`_IO
('V', 70)

	)

2237 
	#VIDIOC_G_EXT_CTRLS
 
	`_IOWR
('V', 71, 
v4l2_ext_c⁄åﬁs
)

	)

2238 
	#VIDIOC_S_EXT_CTRLS
 
	`_IOWR
('V', 72, 
v4l2_ext_c⁄åﬁs
)

	)

2239 
	#VIDIOC_TRY_EXT_CTRLS
 
	`_IOWR
('V', 73, 
v4l2_ext_c⁄åﬁs
)

	)

2240 
	#VIDIOC_ENUM_FRAMESIZES
 
	`_IOWR
('V', 74, 
v4l2_‰msizìnum
)

	)

2241 
	#VIDIOC_ENUM_FRAMEINTERVALS
 
	`_IOWR
('V', 75, 
v4l2_‰mivÆíum
)

	)

2242 
	#VIDIOC_G_ENC_INDEX
 
	`_IOR
('V', 76, 
v4l2_íc_idx
)

	)

2243 
	#VIDIOC_ENCODER_CMD
 
	`_IOWR
('V', 77, 
v4l2_ícodî_cmd
)

	)

2244 
	#VIDIOC_TRY_ENCODER_CMD
 
	`_IOWR
('V', 78, 
v4l2_ícodî_cmd
)

	)

2249 
	#VIDIOC_DBG_S_REGISTER
 
	`_IOW
('V', 79, 
v4l2_dbg_ªgi°î
)

	)

2250 
	#VIDIOC_DBG_G_REGISTER
 
	`_IOWR
('V', 80, 
v4l2_dbg_ªgi°î
)

	)

2252 
	#VIDIOC_S_HW_FREQ_SEEK
 
	`_IOW
('V', 82, 
v4l2_hw_‰eq_£ek
)

	)

2254 
	#VIDIOC_S_DV_TIMINGS
 
	`_IOWR
('V', 87, 
v4l2_dv_timögs
)

	)

2255 
	#VIDIOC_G_DV_TIMINGS
 
	`_IOWR
('V', 88, 
v4l2_dv_timögs
)

	)

2256 
	#VIDIOC_DQEVENT
 
	`_IOR
('V', 89, 
v4l2_evít
)

	)

2257 
	#VIDIOC_SUBSCRIBE_EVENT
 
	`_IOW
('V', 90, 
v4l2_evít_subs¸ùti⁄
)

	)

2258 
	#VIDIOC_UNSUBSCRIBE_EVENT
 
	`_IOW
('V', 91, 
v4l2_evít_subs¸ùti⁄
)

	)

2262 
	#VIDIOC_CREATE_BUFS
 
	`_IOWR
('V', 92, 
v4l2_¸óã_buf„rs
)

	)

2263 
	#VIDIOC_PREPARE_BUF
 
	`_IOWR
('V', 93, 
v4l2_buf„r
)

	)

2266 
	#VIDIOC_G_SELECTION
 
	`_IOWR
('V', 94, 
v4l2_£À˘i⁄
)

	)

2267 
	#VIDIOC_S_SELECTION
 
	`_IOWR
('V', 95, 
v4l2_£À˘i⁄
)

	)

2271 
	#VIDIOC_DECODER_CMD
 
	`_IOWR
('V', 96, 
v4l2_decodî_cmd
)

	)

2272 
	#VIDIOC_TRY_DECODER_CMD
 
	`_IOWR
('V', 97, 
v4l2_decodî_cmd
)

	)

2276 
	#VIDIOC_ENUM_DV_TIMINGS
 
	`_IOWR
('V', 98, 
v4l2_íum_dv_timögs
)

	)

2277 
	#VIDIOC_QUERY_DV_TIMINGS
 
	`_IOR
('V', 99, 
v4l2_dv_timögs
)

	)

2278 
	#VIDIOC_DV_TIMINGS_CAP
 
	`_IOWR
('V', 100, 
v4l2_dv_timögs_ˇp
)

	)

2282 
	#VIDIOC_ENUM_FREQ_BANDS
 
	`_IOWR
('V', 101, 
v4l2_‰equícy_b™d
)

	)

2286 
	#VIDIOC_DBG_G_CHIP_INFO
 
	`_IOWR
('V', 102, 
v4l2_dbg_chù_öfo
)

	)

2288 
	#VIDIOC_QUERY_EXT_CTRL
 
	`_IOWR
('V', 103, 
v4l2_quîy_ext_˘æ
)

	)

2293 
	#BASE_VIDIOC_PRIVATE
 192

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/linux/v4l2-common.h

29 #i‚de‡
__V4L2_COMMON__


30 
	#__V4L2_COMMON__


	)

32 
	~<löux/ty≥s.h
>

41 
	#V4L2_SEL_TGT_CROP
 0x0000

	)

43 
	#V4L2_SEL_TGT_CROP_DEFAULT
 0x0001

	)

45 
	#V4L2_SEL_TGT_CROP_BOUNDS
 0x0002

	)

47 
	#V4L2_SEL_TGT_NATIVE_SIZE
 0x0003

	)

49 
	#V4L2_SEL_TGT_COMPOSE
 0x0100

	)

51 
	#V4L2_SEL_TGT_COMPOSE_DEFAULT
 0x0101

	)

53 
	#V4L2_SEL_TGT_COMPOSE_BOUNDS
 0x0102

	)

55 
	#V4L2_SEL_TGT_COMPOSE_PADDED
 0x0103

	)

58 
	#V4L2_SEL_TGT_CROP_ACTIVE
 
V4L2_SEL_TGT_CROP


	)

59 
	#V4L2_SEL_TGT_COMPOSE_ACTIVE
 
V4L2_SEL_TGT_COMPOSE


	)

60 
	#V4L2_SUBDEV_SEL_TGT_CROP_ACTUAL
 
V4L2_SEL_TGT_CROP


	)

61 
	#V4L2_SUBDEV_SEL_TGT_COMPOSE_ACTUAL
 
V4L2_SEL_TGT_COMPOSE


	)

62 
	#V4L2_SUBDEV_SEL_TGT_CROP_BOUNDS
 
V4L2_SEL_TGT_CROP_BOUNDS


	)

63 
	#V4L2_SUBDEV_SEL_TGT_COMPOSE_BOUNDS
 
V4L2_SEL_TGT_COMPOSE_BOUNDS


	)

66 
	#V4L2_SEL_FLAG_GE
 (1 << 0)

	)

67 
	#V4L2_SEL_FLAG_LE
 (1 << 1)

	)

68 
	#V4L2_SEL_FLAG_KEEP_CONFIG
 (1 << 2)

	)

71 
	#V4L2_SUBDEV_SEL_FLAG_SIZE_GE
 
V4L2_SEL_FLAG_GE


	)

72 
	#V4L2_SUBDEV_SEL_FLAG_SIZE_LE
 
V4L2_SEL_FLAG_LE


	)

73 
	#V4L2_SUBDEV_SEL_FLAG_KEEP_CONFIG
 
V4L2_SEL_FLAG_KEEP_CONFIG


	)

75 
	sv4l2_edid
 {

76 
__u32
 
	m∑d
;

77 
__u32
 
	m°¨t_block
;

78 
__u32
 
	mblocks
;

79 
__u32
 
	mª£rved
[5];

80 
__u8
 *
	medid
;

	@/usr/include/linux/v4l2-controls.h

49 #i‚de‡
__LINUX_V4L2_CONTROLS_H


50 
	#__LINUX_V4L2_CONTROLS_H


	)

53 
	#V4L2_CTRL_CLASS_USER
 0x00980000

	)

54 
	#V4L2_CTRL_CLASS_MPEG
 0x00990000

	)

55 
	#V4L2_CTRL_CLASS_CAMERA
 0x009a0000

	)

56 
	#V4L2_CTRL_CLASS_FM_TX
 0x009b0000

	)

57 
	#V4L2_CTRL_CLASS_FLASH
 0x009c0000

	)

58 
	#V4L2_CTRL_CLASS_JPEG
 0x009d0000

	)

59 
	#V4L2_CTRL_CLASS_IMAGE_SOURCE
 0x009e0000

	)

60 
	#V4L2_CTRL_CLASS_IMAGE_PROC
 0x009f0000

	)

61 
	#V4L2_CTRL_CLASS_DV
 0x00a00000

	)

62 
	#V4L2_CTRL_CLASS_FM_RX
 0x00a10000

	)

63 
	#V4L2_CTRL_CLASS_RF_TUNER
 0x00a20000

	)

64 
	#V4L2_CTRL_CLASS_DETECT
 0x00a30000

	)

68 
	#V4L2_CID_BASE
 (
V4L2_CTRL_CLASS_USER
 | 0x900)

	)

69 
	#V4L2_CID_USER_BASE
 
V4L2_CID_BASE


	)

70 
	#V4L2_CID_USER_CLASS
 (
V4L2_CTRL_CLASS_USER
 | 1)

	)

71 
	#V4L2_CID_BRIGHTNESS
 (
V4L2_CID_BASE
+0)

	)

72 
	#V4L2_CID_CONTRAST
 (
V4L2_CID_BASE
+1)

	)

73 
	#V4L2_CID_SATURATION
 (
V4L2_CID_BASE
+2)

	)

74 
	#V4L2_CID_HUE
 (
V4L2_CID_BASE
+3)

	)

75 
	#V4L2_CID_AUDIO_VOLUME
 (
V4L2_CID_BASE
+5)

	)

76 
	#V4L2_CID_AUDIO_BALANCE
 (
V4L2_CID_BASE
+6)

	)

77 
	#V4L2_CID_AUDIO_BASS
 (
V4L2_CID_BASE
+7)

	)

78 
	#V4L2_CID_AUDIO_TREBLE
 (
V4L2_CID_BASE
+8)

	)

79 
	#V4L2_CID_AUDIO_MUTE
 (
V4L2_CID_BASE
+9)

	)

80 
	#V4L2_CID_AUDIO_LOUDNESS
 (
V4L2_CID_BASE
+10)

	)

81 
	#V4L2_CID_BLACK_LEVEL
 (
V4L2_CID_BASE
+11Ë

	)

82 
	#V4L2_CID_AUTO_WHITE_BALANCE
 (
V4L2_CID_BASE
+12)

	)

83 
	#V4L2_CID_DO_WHITE_BALANCE
 (
V4L2_CID_BASE
+13)

	)

84 
	#V4L2_CID_RED_BALANCE
 (
V4L2_CID_BASE
+14)

	)

85 
	#V4L2_CID_BLUE_BALANCE
 (
V4L2_CID_BASE
+15)

	)

86 
	#V4L2_CID_GAMMA
 (
V4L2_CID_BASE
+16)

	)

87 
	#V4L2_CID_WHITENESS
 (
V4L2_CID_GAMMA
Ë

	)

88 
	#V4L2_CID_EXPOSURE
 (
V4L2_CID_BASE
+17)

	)

89 
	#V4L2_CID_AUTOGAIN
 (
V4L2_CID_BASE
+18)

	)

90 
	#V4L2_CID_GAIN
 (
V4L2_CID_BASE
+19)

	)

91 
	#V4L2_CID_HFLIP
 (
V4L2_CID_BASE
+20)

	)

92 
	#V4L2_CID_VFLIP
 (
V4L2_CID_BASE
+21)

	)

94 
	#V4L2_CID_POWER_LINE_FREQUENCY
 (
V4L2_CID_BASE
+24)

	)

95 
	ev4l2_powî_löe_‰equícy
 {

96 
	mV4L2_CID_POWER_LINE_FREQUENCY_DISABLED
 = 0,

97 
	mV4L2_CID_POWER_LINE_FREQUENCY_50HZ
 = 1,

98 
	mV4L2_CID_POWER_LINE_FREQUENCY_60HZ
 = 2,

99 
	mV4L2_CID_POWER_LINE_FREQUENCY_AUTO
 = 3,

101 
	#V4L2_CID_HUE_AUTO
 (
V4L2_CID_BASE
+25)

	)

102 
	#V4L2_CID_WHITE_BALANCE_TEMPERATURE
 (
V4L2_CID_BASE
+26)

	)

103 
	#V4L2_CID_SHARPNESS
 (
V4L2_CID_BASE
+27)

	)

104 
	#V4L2_CID_BACKLIGHT_COMPENSATION
 (
V4L2_CID_BASE
+28)

	)

105 
	#V4L2_CID_CHROMA_AGC
 (
V4L2_CID_BASE
+29)

	)

106 
	#V4L2_CID_COLOR_KILLER
 (
V4L2_CID_BASE
+30)

	)

107 
	#V4L2_CID_COLORFX
 (
V4L2_CID_BASE
+31)

	)

108 
	ev4l2_cﬁ‹fx
 {

109 
	mV4L2_COLORFX_NONE
 = 0,

110 
	mV4L2_COLORFX_BW
 = 1,

111 
	mV4L2_COLORFX_SEPIA
 = 2,

112 
	mV4L2_COLORFX_NEGATIVE
 = 3,

113 
	mV4L2_COLORFX_EMBOSS
 = 4,

114 
	mV4L2_COLORFX_SKETCH
 = 5,

115 
	mV4L2_COLORFX_SKY_BLUE
 = 6,

116 
	mV4L2_COLORFX_GRASS_GREEN
 = 7,

117 
	mV4L2_COLORFX_SKIN_WHITEN
 = 8,

118 
	mV4L2_COLORFX_VIVID
 = 9,

119 
	mV4L2_COLORFX_AQUA
 = 10,

120 
	mV4L2_COLORFX_ART_FREEZE
 = 11,

121 
	mV4L2_COLORFX_SILHOUETTE
 = 12,

122 
	mV4L2_COLORFX_SOLARIZATION
 = 13,

123 
	mV4L2_COLORFX_ANTIQUE
 = 14,

124 
	mV4L2_COLORFX_SET_CBCR
 = 15,

126 
	#V4L2_CID_AUTOBRIGHTNESS
 (
V4L2_CID_BASE
+32)

	)

127 
	#V4L2_CID_BAND_STOP_FILTER
 (
V4L2_CID_BASE
+33)

	)

129 
	#V4L2_CID_ROTATE
 (
V4L2_CID_BASE
+34)

	)

130 
	#V4L2_CID_BG_COLOR
 (
V4L2_CID_BASE
+35)

	)

132 
	#V4L2_CID_CHROMA_GAIN
 (
V4L2_CID_BASE
+36)

	)

134 
	#V4L2_CID_ILLUMINATORS_1
 (
V4L2_CID_BASE
+37)

	)

135 
	#V4L2_CID_ILLUMINATORS_2
 (
V4L2_CID_BASE
+38)

	)

137 
	#V4L2_CID_MIN_BUFFERS_FOR_CAPTURE
 (
V4L2_CID_BASE
+39)

	)

138 
	#V4L2_CID_MIN_BUFFERS_FOR_OUTPUT
 (
V4L2_CID_BASE
+40)

	)

140 
	#V4L2_CID_ALPHA_COMPONENT
 (
V4L2_CID_BASE
+41)

	)

141 
	#V4L2_CID_COLORFX_CBCR
 (
V4L2_CID_BASE
+42)

	)

144 
	#V4L2_CID_LASTP1
 (
V4L2_CID_BASE
+43)

	)

150 
	#V4L2_CID_USER_MEYE_BASE
 (
V4L2_CID_USER_BASE
 + 0x1000)

	)

154 
	#V4L2_CID_USER_BTTV_BASE
 (
V4L2_CID_USER_BASE
 + 0x1010)

	)

159 
	#V4L2_CID_USER_S2255_BASE
 (
V4L2_CID_USER_BASE
 + 0x1030)

	)

163 
	#V4L2_CID_USER_SI476X_BASE
 (
V4L2_CID_USER_BASE
 + 0x1040)

	)

167 
	#V4L2_CID_USER_TI_VPE_BASE
 (
V4L2_CID_USER_BASE
 + 0x1050)

	)

171 
	#V4L2_CID_USER_SAA7134_BASE
 (
V4L2_CID_USER_BASE
 + 0x1060)

	)

175 
	#V4L2_CID_USER_ADV7180_BASE
 (
V4L2_CID_USER_BASE
 + 0x1070)

	)

179 
	#V4L2_CID_USER_TC358743_BASE
 (
V4L2_CID_USER_BASE
 + 0x1080)

	)

185 
	#V4L2_CID_MPEG_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x900)

	)

186 
	#V4L2_CID_MPEG_CLASS
 (
V4L2_CTRL_CLASS_MPEG
 | 1)

	)

189 
	#V4L2_CID_MPEG_STREAM_TYPE
 (
V4L2_CID_MPEG_BASE
+0)

	)

190 
	ev4l2_m≥g_°ªam_ty≥
 {

191 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_PS
 = 0,

192 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_TS
 = 1,

193 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_SS
 = 2,

194 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_DVD
 = 3,

195 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_VCD
 = 4,

196 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_SVCD
 = 5,

198 
	#V4L2_CID_MPEG_STREAM_PID_PMT
 (
V4L2_CID_MPEG_BASE
+1)

	)

199 
	#V4L2_CID_MPEG_STREAM_PID_AUDIO
 (
V4L2_CID_MPEG_BASE
+2)

	)

200 
	#V4L2_CID_MPEG_STREAM_PID_VIDEO
 (
V4L2_CID_MPEG_BASE
+3)

	)

201 
	#V4L2_CID_MPEG_STREAM_PID_PCR
 (
V4L2_CID_MPEG_BASE
+4)

	)

202 
	#V4L2_CID_MPEG_STREAM_PES_ID_AUDIO
 (
V4L2_CID_MPEG_BASE
+5)

	)

203 
	#V4L2_CID_MPEG_STREAM_PES_ID_VIDEO
 (
V4L2_CID_MPEG_BASE
+6)

	)

204 
	#V4L2_CID_MPEG_STREAM_VBI_FMT
 (
V4L2_CID_MPEG_BASE
+7)

	)

205 
	ev4l2_m≥g_°ªam_vbi_fmt
 {

206 
	mV4L2_MPEG_STREAM_VBI_FMT_NONE
 = 0,

207 
	mV4L2_MPEG_STREAM_VBI_FMT_IVTV
 = 1,

211 
	#V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ
 (
V4L2_CID_MPEG_BASE
+100)

	)

212 
	ev4l2_m≥g_audio_ßm∂ög_‰eq
 {

213 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_44100
 = 0,

214 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_48000
 = 1,

215 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_32000
 = 2,

217 
	#V4L2_CID_MPEG_AUDIO_ENCODING
 (
V4L2_CID_MPEG_BASE
+101)

	)

218 
	ev4l2_m≥g_audio_ícodög
 {

219 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_1
 = 0,

220 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_2
 = 1,

221 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_3
 = 2,

222 
	mV4L2_MPEG_AUDIO_ENCODING_AAC
 = 3,

223 
	mV4L2_MPEG_AUDIO_ENCODING_AC3
 = 4,

225 
	#V4L2_CID_MPEG_AUDIO_L1_BITRATE
 (
V4L2_CID_MPEG_BASE
+102)

	)

226 
	ev4l2_m≥g_audio_l1_bôøã
 {

227 
	mV4L2_MPEG_AUDIO_L1_BITRATE_32K
 = 0,

228 
	mV4L2_MPEG_AUDIO_L1_BITRATE_64K
 = 1,

229 
	mV4L2_MPEG_AUDIO_L1_BITRATE_96K
 = 2,

230 
	mV4L2_MPEG_AUDIO_L1_BITRATE_128K
 = 3,

231 
	mV4L2_MPEG_AUDIO_L1_BITRATE_160K
 = 4,

232 
	mV4L2_MPEG_AUDIO_L1_BITRATE_192K
 = 5,

233 
	mV4L2_MPEG_AUDIO_L1_BITRATE_224K
 = 6,

234 
	mV4L2_MPEG_AUDIO_L1_BITRATE_256K
 = 7,

235 
	mV4L2_MPEG_AUDIO_L1_BITRATE_288K
 = 8,

236 
	mV4L2_MPEG_AUDIO_L1_BITRATE_320K
 = 9,

237 
	mV4L2_MPEG_AUDIO_L1_BITRATE_352K
 = 10,

238 
	mV4L2_MPEG_AUDIO_L1_BITRATE_384K
 = 11,

239 
	mV4L2_MPEG_AUDIO_L1_BITRATE_416K
 = 12,

240 
	mV4L2_MPEG_AUDIO_L1_BITRATE_448K
 = 13,

242 
	#V4L2_CID_MPEG_AUDIO_L2_BITRATE
 (
V4L2_CID_MPEG_BASE
+103)

	)

243 
	ev4l2_m≥g_audio_l2_bôøã
 {

244 
	mV4L2_MPEG_AUDIO_L2_BITRATE_32K
 = 0,

245 
	mV4L2_MPEG_AUDIO_L2_BITRATE_48K
 = 1,

246 
	mV4L2_MPEG_AUDIO_L2_BITRATE_56K
 = 2,

247 
	mV4L2_MPEG_AUDIO_L2_BITRATE_64K
 = 3,

248 
	mV4L2_MPEG_AUDIO_L2_BITRATE_80K
 = 4,

249 
	mV4L2_MPEG_AUDIO_L2_BITRATE_96K
 = 5,

250 
	mV4L2_MPEG_AUDIO_L2_BITRATE_112K
 = 6,

251 
	mV4L2_MPEG_AUDIO_L2_BITRATE_128K
 = 7,

252 
	mV4L2_MPEG_AUDIO_L2_BITRATE_160K
 = 8,

253 
	mV4L2_MPEG_AUDIO_L2_BITRATE_192K
 = 9,

254 
	mV4L2_MPEG_AUDIO_L2_BITRATE_224K
 = 10,

255 
	mV4L2_MPEG_AUDIO_L2_BITRATE_256K
 = 11,

256 
	mV4L2_MPEG_AUDIO_L2_BITRATE_320K
 = 12,

257 
	mV4L2_MPEG_AUDIO_L2_BITRATE_384K
 = 13,

259 
	#V4L2_CID_MPEG_AUDIO_L3_BITRATE
 (
V4L2_CID_MPEG_BASE
+104)

	)

260 
	ev4l2_m≥g_audio_l3_bôøã
 {

261 
	mV4L2_MPEG_AUDIO_L3_BITRATE_32K
 = 0,

262 
	mV4L2_MPEG_AUDIO_L3_BITRATE_40K
 = 1,

263 
	mV4L2_MPEG_AUDIO_L3_BITRATE_48K
 = 2,

264 
	mV4L2_MPEG_AUDIO_L3_BITRATE_56K
 = 3,

265 
	mV4L2_MPEG_AUDIO_L3_BITRATE_64K
 = 4,

266 
	mV4L2_MPEG_AUDIO_L3_BITRATE_80K
 = 5,

267 
	mV4L2_MPEG_AUDIO_L3_BITRATE_96K
 = 6,

268 
	mV4L2_MPEG_AUDIO_L3_BITRATE_112K
 = 7,

269 
	mV4L2_MPEG_AUDIO_L3_BITRATE_128K
 = 8,

270 
	mV4L2_MPEG_AUDIO_L3_BITRATE_160K
 = 9,

271 
	mV4L2_MPEG_AUDIO_L3_BITRATE_192K
 = 10,

272 
	mV4L2_MPEG_AUDIO_L3_BITRATE_224K
 = 11,

273 
	mV4L2_MPEG_AUDIO_L3_BITRATE_256K
 = 12,

274 
	mV4L2_MPEG_AUDIO_L3_BITRATE_320K
 = 13,

276 
	#V4L2_CID_MPEG_AUDIO_MODE
 (
V4L2_CID_MPEG_BASE
+105)

	)

277 
	ev4l2_m≥g_audio_mode
 {

278 
	mV4L2_MPEG_AUDIO_MODE_STEREO
 = 0,

279 
	mV4L2_MPEG_AUDIO_MODE_JOINT_STEREO
 = 1,

280 
	mV4L2_MPEG_AUDIO_MODE_DUAL
 = 2,

281 
	mV4L2_MPEG_AUDIO_MODE_MONO
 = 3,

283 
	#V4L2_CID_MPEG_AUDIO_MODE_EXTENSION
 (
V4L2_CID_MPEG_BASE
+106)

	)

284 
	ev4l2_m≥g_audio_mode_exãnsi⁄
 {

285 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4
 = 0,

286 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8
 = 1,

287 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12
 = 2,

288 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16
 = 3,

290 
	#V4L2_CID_MPEG_AUDIO_EMPHASIS
 (
V4L2_CID_MPEG_BASE
+107)

	)

291 
	ev4l2_m≥g_audio_emphasis
 {

292 
	mV4L2_MPEG_AUDIO_EMPHASIS_NONE
 = 0,

293 
	mV4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS
 = 1,

294 
	mV4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17
 = 2,

296 
	#V4L2_CID_MPEG_AUDIO_CRC
 (
V4L2_CID_MPEG_BASE
+108)

	)

297 
	ev4l2_m≥g_audio_¸c
 {

298 
	mV4L2_MPEG_AUDIO_CRC_NONE
 = 0,

299 
	mV4L2_MPEG_AUDIO_CRC_CRC16
 = 1,

301 
	#V4L2_CID_MPEG_AUDIO_MUTE
 (
V4L2_CID_MPEG_BASE
+109)

	)

302 
	#V4L2_CID_MPEG_AUDIO_AAC_BITRATE
 (
V4L2_CID_MPEG_BASE
+110)

	)

303 
	#V4L2_CID_MPEG_AUDIO_AC3_BITRATE
 (
V4L2_CID_MPEG_BASE
+111)

	)

304 
	ev4l2_m≥g_audio_ac3_bôøã
 {

305 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_32K
 = 0,

306 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_40K
 = 1,

307 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_48K
 = 2,

308 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_56K
 = 3,

309 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_64K
 = 4,

310 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_80K
 = 5,

311 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_96K
 = 6,

312 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_112K
 = 7,

313 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_128K
 = 8,

314 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_160K
 = 9,

315 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_192K
 = 10,

316 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_224K
 = 11,

317 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_256K
 = 12,

318 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_320K
 = 13,

319 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_384K
 = 14,

320 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_448K
 = 15,

321 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_512K
 = 16,

322 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_576K
 = 17,

323 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_640K
 = 18,

325 
	#V4L2_CID_MPEG_AUDIO_DEC_PLAYBACK
 (
V4L2_CID_MPEG_BASE
+112)

	)

326 
	ev4l2_m≥g_audio_dec_∂ayback
 {

327 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_AUTO
 = 0,

328 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_STEREO
 = 1,

329 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_LEFT
 = 2,

330 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_RIGHT
 = 3,

331 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_MONO
 = 4,

332 
	mV4L2_MPEG_AUDIO_DEC_PLAYBACK_SWAPPED_STEREO
 = 5,

334 
	#V4L2_CID_MPEG_AUDIO_DEC_MULTILINGUAL_PLAYBACK
 (
V4L2_CID_MPEG_BASE
+113)

	)

337 
	#V4L2_CID_MPEG_VIDEO_ENCODING
 (
V4L2_CID_MPEG_BASE
+200)

	)

338 
	ev4l2_m≥g_video_ícodög
 {

339 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_1
 = 0,

340 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_2
 = 1,

341 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC
 = 2,

343 
	#V4L2_CID_MPEG_VIDEO_ASPECT
 (
V4L2_CID_MPEG_BASE
+201)

	)

344 
	ev4l2_m≥g_video_a•e˘
 {

345 
	mV4L2_MPEG_VIDEO_ASPECT_1x1
 = 0,

346 
	mV4L2_MPEG_VIDEO_ASPECT_4x3
 = 1,

347 
	mV4L2_MPEG_VIDEO_ASPECT_16x9
 = 2,

348 
	mV4L2_MPEG_VIDEO_ASPECT_221x100
 = 3,

350 
	#V4L2_CID_MPEG_VIDEO_B_FRAMES
 (
V4L2_CID_MPEG_BASE
+202)

	)

351 
	#V4L2_CID_MPEG_VIDEO_GOP_SIZE
 (
V4L2_CID_MPEG_BASE
+203)

	)

352 
	#V4L2_CID_MPEG_VIDEO_GOP_CLOSURE
 (
V4L2_CID_MPEG_BASE
+204)

	)

353 
	#V4L2_CID_MPEG_VIDEO_PULLDOWN
 (
V4L2_CID_MPEG_BASE
+205)

	)

354 
	#V4L2_CID_MPEG_VIDEO_BITRATE_MODE
 (
V4L2_CID_MPEG_BASE
+206)

	)

355 
	ev4l2_m≥g_video_bôøã_mode
 {

356 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_VBR
 = 0,

357 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_CBR
 = 1,

359 
	#V4L2_CID_MPEG_VIDEO_BITRATE
 (
V4L2_CID_MPEG_BASE
+207)

	)

360 
	#V4L2_CID_MPEG_VIDEO_BITRATE_PEAK
 (
V4L2_CID_MPEG_BASE
+208)

	)

361 
	#V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION
 (
V4L2_CID_MPEG_BASE
+209)

	)

362 
	#V4L2_CID_MPEG_VIDEO_MUTE
 (
V4L2_CID_MPEG_BASE
+210)

	)

363 
	#V4L2_CID_MPEG_VIDEO_MUTE_YUV
 (
V4L2_CID_MPEG_BASE
+211)

	)

364 
	#V4L2_CID_MPEG_VIDEO_DECODER_SLICE_INTERFACE
 (
V4L2_CID_MPEG_BASE
+212)

	)

365 
	#V4L2_CID_MPEG_VIDEO_DECODER_MPEG4_DEBLOCK_FILTER
 (
V4L2_CID_MPEG_BASE
+213)

	)

366 
	#V4L2_CID_MPEG_VIDEO_CYCLIC_INTRA_REFRESH_MB
 (
V4L2_CID_MPEG_BASE
+214)

	)

367 
	#V4L2_CID_MPEG_VIDEO_FRAME_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+215)

	)

368 
	#V4L2_CID_MPEG_VIDEO_HEADER_MODE
 (
V4L2_CID_MPEG_BASE
+216)

	)

369 
	ev4l2_m≥g_video_hódî_mode
 {

370 
	mV4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE
 = 0,

371 
	mV4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME
 = 1,

374 
	#V4L2_CID_MPEG_VIDEO_MAX_REF_PIC
 (
V4L2_CID_MPEG_BASE
+217)

	)

375 
	#V4L2_CID_MPEG_VIDEO_MB_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+218)

	)

376 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_BYTES
 (
V4L2_CID_MPEG_BASE
+219)

	)

377 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_MB
 (
V4L2_CID_MPEG_BASE
+220)

	)

378 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MODE
 (
V4L2_CID_MPEG_BASE
+221)

	)

379 
	ev4l2_m≥g_video_mu…i_¶i˚_mode
 {

380 
	mV4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE
 = 0,

381 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB
 = 1,

382 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES
 = 2,

384 
	#V4L2_CID_MPEG_VIDEO_VBV_SIZE
 (
V4L2_CID_MPEG_BASE
+222)

	)

385 
	#V4L2_CID_MPEG_VIDEO_DEC_PTS
 (
V4L2_CID_MPEG_BASE
+223)

	)

386 
	#V4L2_CID_MPEG_VIDEO_DEC_FRAME
 (
V4L2_CID_MPEG_BASE
+224)

	)

387 
	#V4L2_CID_MPEG_VIDEO_VBV_DELAY
 (
V4L2_CID_MPEG_BASE
+225)

	)

388 
	#V4L2_CID_MPEG_VIDEO_REPEAT_SEQ_HEADER
 (
V4L2_CID_MPEG_BASE
+226)

	)

389 
	#V4L2_CID_MPEG_VIDEO_MV_H_SEARCH_RANGE
 (
V4L2_CID_MPEG_BASE
+227)

	)

390 
	#V4L2_CID_MPEG_VIDEO_MV_V_SEARCH_RANGE
 (
V4L2_CID_MPEG_BASE
+228)

	)

392 
	#V4L2_CID_MPEG_VIDEO_H263_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+300)

	)

393 
	#V4L2_CID_MPEG_VIDEO_H263_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+301)

	)

394 
	#V4L2_CID_MPEG_VIDEO_H263_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+302)

	)

395 
	#V4L2_CID_MPEG_VIDEO_H263_MIN_QP
 (
V4L2_CID_MPEG_BASE
+303)

	)

396 
	#V4L2_CID_MPEG_VIDEO_H263_MAX_QP
 (
V4L2_CID_MPEG_BASE
+304)

	)

397 
	#V4L2_CID_MPEG_VIDEO_H264_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+350)

	)

398 
	#V4L2_CID_MPEG_VIDEO_H264_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+351)

	)

399 
	#V4L2_CID_MPEG_VIDEO_H264_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+352)

	)

400 
	#V4L2_CID_MPEG_VIDEO_H264_MIN_QP
 (
V4L2_CID_MPEG_BASE
+353)

	)

401 
	#V4L2_CID_MPEG_VIDEO_H264_MAX_QP
 (
V4L2_CID_MPEG_BASE
+354)

	)

402 
	#V4L2_CID_MPEG_VIDEO_H264_8X8_TRANSFORM
 (
V4L2_CID_MPEG_BASE
+355)

	)

403 
	#V4L2_CID_MPEG_VIDEO_H264_CPB_SIZE
 (
V4L2_CID_MPEG_BASE
+356)

	)

404 
	#V4L2_CID_MPEG_VIDEO_H264_ENTROPY_MODE
 (
V4L2_CID_MPEG_BASE
+357)

	)

405 
	ev4l2_m≥g_video_h264_íå›y_mode
 {

406 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC
 = 0,

407 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC
 = 1,

409 
	#V4L2_CID_MPEG_VIDEO_H264_I_PERIOD
 (
V4L2_CID_MPEG_BASE
+358)

	)

410 
	#V4L2_CID_MPEG_VIDEO_H264_LEVEL
 (
V4L2_CID_MPEG_BASE
+359)

	)

411 
	ev4l2_m≥g_video_h264_Àvñ
 {

412 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_0
 = 0,

413 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1B
 = 1,

414 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_1
 = 2,

415 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_2
 = 3,

416 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_3
 = 4,

417 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_0
 = 5,

418 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_1
 = 6,

419 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_2
 = 7,

420 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_0
 = 8,

421 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_1
 = 9,

422 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_2
 = 10,

423 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_0
 = 11,

424 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_1
 = 12,

425 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_2
 = 13,

426 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_0
 = 14,

427 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_1
 = 15,

429 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_ALPHA
 (
V4L2_CID_MPEG_BASE
+360)

	)

430 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_BETA
 (
V4L2_CID_MPEG_BASE
+361)

	)

431 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_MODE
 (
V4L2_CID_MPEG_BASE
+362)

	)

432 
	ev4l2_m≥g_video_h264_lo›_fûãr_mode
 {

433 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED
 = 0,

434 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED
 = 1,

435 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY
 = 2,

437 
	#V4L2_CID_MPEG_VIDEO_H264_PROFILE
 (
V4L2_CID_MPEG_BASE
+363)

	)

438 
	ev4l2_m≥g_video_h264_¥ofûe
 {

439 
	mV4L2_MPEG_VIDEO_H264_PROFILE_BASELINE
 = 0,

440 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE
 = 1,

441 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MAIN
 = 2,

442 
	mV4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED
 = 3,

443 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH
 = 4,

444 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10
 = 5,

445 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422
 = 6,

446 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE
 = 7,

447 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA
 = 8,

448 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA
 = 9,

449 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA
 = 10,

450 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA
 = 11,

451 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE
 = 12,

452 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH
 = 13,

453 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA
 = 14,

454 
	mV4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH
 = 15,

455 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH
 = 16,

457 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_HEIGHT
 (
V4L2_CID_MPEG_BASE
+364)

	)

458 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_WIDTH
 (
V4L2_CID_MPEG_BASE
+365)

	)

459 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_ENABLE
 (
V4L2_CID_MPEG_BASE
+366)

	)

460 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_IDC
 (
V4L2_CID_MPEG_BASE
+367)

	)

461 
	ev4l2_m≥g_video_h264_vui_ßr_idc
 {

462 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED
 = 0,

463 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1
 = 1,

464 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11
 = 2,

465 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11
 = 3,

466 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11
 = 4,

467 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33
 = 5,

468 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11
 = 6,

469 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11
 = 7,

470 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11
 = 8,

471 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33
 = 9,

472 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11
 = 10,

473 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11
 = 11,

474 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33
 = 12,

475 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99
 = 13,

476 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3
 = 14,

477 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2
 = 15,

478 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1
 = 16,

479 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED
 = 17,

481 
	#V4L2_CID_MPEG_VIDEO_H264_SEI_FRAME_PACKING
 (
V4L2_CID_MPEG_BASE
+368)

	)

482 
	#V4L2_CID_MPEG_VIDEO_H264_SEI_FP_CURRENT_FRAME_0
 (
V4L2_CID_MPEG_BASE
+369)

	)

483 
	#V4L2_CID_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE
 (
V4L2_CID_MPEG_BASE
+370)

	)

484 
	ev4l2_m≥g_video_h264_£i_Â_¨øngemít_ty≥
 {

485 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_CHECKERBOARD
 = 0,

486 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_COLUMN
 = 1,

487 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_ROW
 = 2,

488 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_SIDE_BY_SIDE
 = 3,

489 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_TOP_BOTTOM
 = 4,

490 
	mV4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_TEMPORAL
 = 5,

492 
	#V4L2_CID_MPEG_VIDEO_H264_FMO
 (
V4L2_CID_MPEG_BASE
+371)

	)

493 
	#V4L2_CID_MPEG_VIDEO_H264_FMO_MAP_TYPE
 (
V4L2_CID_MPEG_BASE
+372)

	)

494 
	ev4l2_m≥g_video_h264_fmo_m≠_ty≥
 {

495 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_INTERLEAVED_SLICES
 = 0,

496 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_SCATTERED_SLICES
 = 1,

497 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_FOREGROUND_WITH_LEFT_OVER
 = 2,

498 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_BOX_OUT
 = 3,

499 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_RASTER_SCAN
 = 4,

500 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_WIPE_SCAN
 = 5,

501 
	mV4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_EXPLICIT
 = 6,

503 
	#V4L2_CID_MPEG_VIDEO_H264_FMO_SLICE_GROUP
 (
V4L2_CID_MPEG_BASE
+373)

	)

504 
	#V4L2_CID_MPEG_VIDEO_H264_FMO_CHANGE_DIRECTION
 (
V4L2_CID_MPEG_BASE
+374)

	)

505 
	ev4l2_m≥g_video_h264_fmo_ch™ge_dú
 {

506 
	mV4L2_MPEG_VIDEO_H264_FMO_CHANGE_DIR_RIGHT
 = 0,

507 
	mV4L2_MPEG_VIDEO_H264_FMO_CHANGE_DIR_LEFT
 = 1,

509 
	#V4L2_CID_MPEG_VIDEO_H264_FMO_CHANGE_RATE
 (
V4L2_CID_MPEG_BASE
+375)

	)

510 
	#V4L2_CID_MPEG_VIDEO_H264_FMO_RUN_LENGTH
 (
V4L2_CID_MPEG_BASE
+376)

	)

511 
	#V4L2_CID_MPEG_VIDEO_H264_ASO
 (
V4L2_CID_MPEG_BASE
+377)

	)

512 
	#V4L2_CID_MPEG_VIDEO_H264_ASO_SLICE_ORDER
 (
V4L2_CID_MPEG_BASE
+378)

	)

513 
	#V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING
 (
V4L2_CID_MPEG_BASE
+379)

	)

514 
	#V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_TYPE
 (
V4L2_CID_MPEG_BASE
+380)

	)

515 
	ev4l2_m≥g_video_h264_hõørchiˇl_codög_ty≥
 {

516 
	mV4L2_MPEG_VIDEO_H264_HIERARCHICAL_CODING_B
 = 0,

517 
	mV4L2_MPEG_VIDEO_H264_HIERARCHICAL_CODING_P
 = 1,

519 
	#V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_LAYER
 (
V4L2_CID_MPEG_BASE
+381)

	)

520 
	#V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_LAYER_QP
 (
V4L2_CID_MPEG_BASE
+382)

	)

521 
	#V4L2_CID_MPEG_VIDEO_MPEG4_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+400)

	)

522 
	#V4L2_CID_MPEG_VIDEO_MPEG4_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+401)

	)

523 
	#V4L2_CID_MPEG_VIDEO_MPEG4_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+402)

	)

524 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MIN_QP
 (
V4L2_CID_MPEG_BASE
+403)

	)

525 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MAX_QP
 (
V4L2_CID_MPEG_BASE
+404)

	)

526 
	#V4L2_CID_MPEG_VIDEO_MPEG4_LEVEL
 (
V4L2_CID_MPEG_BASE
+405)

	)

527 
	ev4l2_m≥g_video_m≥g4_Àvñ
 {

528 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0
 = 0,

529 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0B
 = 1,

530 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_1
 = 2,

531 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_2
 = 3,

532 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3
 = 4,

533 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3B
 = 5,

534 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_4
 = 6,

535 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_5
 = 7,

537 
	#V4L2_CID_MPEG_VIDEO_MPEG4_PROFILE
 (
V4L2_CID_MPEG_BASE
+406)

	)

538 
	ev4l2_m≥g_video_m≥g4_¥ofûe
 {

539 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE
 = 0,

540 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE
 = 1,

541 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE
 = 2,

542 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE
 = 3,

543 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY
 = 4,

545 
	#V4L2_CID_MPEG_VIDEO_MPEG4_QPEL
 (
V4L2_CID_MPEG_BASE
+407)

	)

551 
	#V4L2_CID_MPEG_VIDEO_VPX_NUM_PARTITIONS
 (
V4L2_CID_MPEG_BASE
+500)

	)

552 
	ev4l2_vp8_num_∑πôi⁄s
 {

553 
	mV4L2_CID_MPEG_VIDEO_VPX_1_PARTITION
 = 0,

554 
	mV4L2_CID_MPEG_VIDEO_VPX_2_PARTITIONS
 = 1,

555 
	mV4L2_CID_MPEG_VIDEO_VPX_4_PARTITIONS
 = 2,

556 
	mV4L2_CID_MPEG_VIDEO_VPX_8_PARTITIONS
 = 3,

558 
	#V4L2_CID_MPEG_VIDEO_VPX_IMD_DISABLE_4X4
 (
V4L2_CID_MPEG_BASE
+501)

	)

559 
	#V4L2_CID_MPEG_VIDEO_VPX_NUM_REF_FRAMES
 (
V4L2_CID_MPEG_BASE
+502)

	)

560 
	ev4l2_vp8_num_ªf_‰ames
 {

561 
	mV4L2_CID_MPEG_VIDEO_VPX_1_REF_FRAME
 = 0,

562 
	mV4L2_CID_MPEG_VIDEO_VPX_2_REF_FRAME
 = 1,

563 
	mV4L2_CID_MPEG_VIDEO_VPX_3_REF_FRAME
 = 2,

565 
	#V4L2_CID_MPEG_VIDEO_VPX_FILTER_LEVEL
 (
V4L2_CID_MPEG_BASE
+503)

	)

566 
	#V4L2_CID_MPEG_VIDEO_VPX_FILTER_SHARPNESS
 (
V4L2_CID_MPEG_BASE
+504)

	)

567 
	#V4L2_CID_MPEG_VIDEO_VPX_GOLDEN_FRAME_REF_PERIOD
 (
V4L2_CID_MPEG_BASE
+505)

	)

568 
	#V4L2_CID_MPEG_VIDEO_VPX_GOLDEN_FRAME_SEL
 (
V4L2_CID_MPEG_BASE
+506)

	)

569 
	ev4l2_vp8_gﬁdí_‰ame_£l
 {

570 
	mV4L2_CID_MPEG_VIDEO_VPX_GOLDEN_FRAME_USE_PREV
 = 0,

571 
	mV4L2_CID_MPEG_VIDEO_VPX_GOLDEN_FRAME_USE_REF_PERIOD
 = 1,

573 
	#V4L2_CID_MPEG_VIDEO_VPX_MIN_QP
 (
V4L2_CID_MPEG_BASE
+507)

	)

574 
	#V4L2_CID_MPEG_VIDEO_VPX_MAX_QP
 (
V4L2_CID_MPEG_BASE
+508)

	)

575 
	#V4L2_CID_MPEG_VIDEO_VPX_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+509)

	)

576 
	#V4L2_CID_MPEG_VIDEO_VPX_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+510)

	)

577 
	#V4L2_CID_MPEG_VIDEO_VPX_PROFILE
 (
V4L2_CID_MPEG_BASE
+511)

	)

580 
	#V4L2_CID_MPEG_CX2341X_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1000)

	)

581 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+0)

	)

582 
	ev4l2_m≥g_cx2341x_video_•©ül_fûãr_mode
 {

583 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL
 = 0,

584 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO
 = 1,

586 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+1)

	)

587 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+2)

	)

588 
	ev4l2_m≥g_cx2341x_video_luma_•©ül_fûãr_ty≥
 {

589 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

590 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

591 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT
 = 2,

592 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE
 = 3,

593 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE
 = 4,

595 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+3)

	)

596 
	ev4l2_m≥g_cx2341x_video_chroma_•©ül_fûãr_ty≥
 {

597 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

598 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

600 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+4)

	)

601 
	ev4l2_m≥g_cx2341x_video_ãmp‹Æ_fûãr_mode
 {

602 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL
 = 0,

603 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO
 = 1,

605 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+5)

	)

606 
	#V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+6)

	)

607 
	ev4l2_m≥g_cx2341x_video_medün_fûãr_ty≥
 {

608 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF
 = 0,

609 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR
 = 1,

610 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT
 = 2,

611 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT
 = 3,

612 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG
 = 4,

614 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+7)

	)

615 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+8)

	)

616 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+9)

	)

617 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+10)

	)

618 
	#V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS
 (
V4L2_CID_MPEG_CX2341X_BASE
+11)

	)

621 
	#V4L2_CID_MPEG_MFC51_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1100)

	)

623 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY
 (
V4L2_CID_MPEG_MFC51_BASE
+0)

	)

624 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY_ENABLE
 (
V4L2_CID_MPEG_MFC51_BASE
+1)

	)

625 
	#V4L2_CID_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE
 (
V4L2_CID_MPEG_MFC51_BASE
+2)

	)

626 
	ev4l2_m≥g_mfc51_video_‰ame_skù_mode
 {

627 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED
 = 0,

628 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT
 = 1,

629 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT
 = 2,

631 
	#V4L2_CID_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE
 (
V4L2_CID_MPEG_MFC51_BASE
+3)

	)

632 
	ev4l2_m≥g_mfc51_video_f‹˚_‰ame_ty≥
 {

633 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED
 = 0,

634 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME
 = 1,

635 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED
 = 2,

637 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING
 (
V4L2_CID_MPEG_MFC51_BASE
+4)

	)

638 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING_YUV
 (
V4L2_CID_MPEG_MFC51_BASE
+5)

	)

639 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_FIXED_TARGET_BIT
 (
V4L2_CID_MPEG_MFC51_BASE
+6)

	)

640 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_REACTION_COEFF
 (
V4L2_CID_MPEG_MFC51_BASE
+7)

	)

641 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_ACTIVITY
 (
V4L2_CID_MPEG_MFC51_BASE
+50)

	)

642 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_DARK
 (
V4L2_CID_MPEG_MFC51_BASE
+51)

	)

643 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_SMOOTH
 (
V4L2_CID_MPEG_MFC51_BASE
+52)

	)

644 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_STATIC
 (
V4L2_CID_MPEG_MFC51_BASE
+53)

	)

645 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_NUM_REF_PIC_FOR_P
 (
V4L2_CID_MPEG_MFC51_BASE
+54)

	)

650 
	#V4L2_CID_CAMERA_CLASS_BASE
 (
V4L2_CTRL_CLASS_CAMERA
 | 0x900)

	)

651 
	#V4L2_CID_CAMERA_CLASS
 (
V4L2_CTRL_CLASS_CAMERA
 | 1)

	)

653 
	#V4L2_CID_EXPOSURE_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+1)

	)

654 
	ev4l2_exposuª_auto_ty≥
 {

655 
	mV4L2_EXPOSURE_AUTO
 = 0,

656 
	mV4L2_EXPOSURE_MANUAL
 = 1,

657 
	mV4L2_EXPOSURE_SHUTTER_PRIORITY
 = 2,

658 
	mV4L2_EXPOSURE_APERTURE_PRIORITY
 = 3

660 
	#V4L2_CID_EXPOSURE_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+2)

	)

661 
	#V4L2_CID_EXPOSURE_AUTO_PRIORITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+3)

	)

663 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+4)

	)

664 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+5)

	)

665 
	#V4L2_CID_PAN_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+6)

	)

666 
	#V4L2_CID_TILT_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+7)

	)

668 
	#V4L2_CID_PAN_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+8)

	)

669 
	#V4L2_CID_TILT_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+9)

	)

671 
	#V4L2_CID_FOCUS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+10)

	)

672 
	#V4L2_CID_FOCUS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+11)

	)

673 
	#V4L2_CID_FOCUS_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+12)

	)

675 
	#V4L2_CID_ZOOM_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+13)

	)

676 
	#V4L2_CID_ZOOM_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+14)

	)

677 
	#V4L2_CID_ZOOM_CONTINUOUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+15)

	)

679 
	#V4L2_CID_PRIVACY
 (
V4L2_CID_CAMERA_CLASS_BASE
+16)

	)

681 
	#V4L2_CID_IRIS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+17)

	)

682 
	#V4L2_CID_IRIS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+18)

	)

684 
	#V4L2_CID_AUTO_EXPOSURE_BIAS
 (
V4L2_CID_CAMERA_CLASS_BASE
+19)

	)

686 
	#V4L2_CID_AUTO_N_PRESET_WHITE_BALANCE
 (
V4L2_CID_CAMERA_CLASS_BASE
+20)

	)

687 
	ev4l2_auto_n_¥e£t_whôe_bÆ™˚
 {

688 
	mV4L2_WHITE_BALANCE_MANUAL
 = 0,

689 
	mV4L2_WHITE_BALANCE_AUTO
 = 1,

690 
	mV4L2_WHITE_BALANCE_INCANDESCENT
 = 2,

691 
	mV4L2_WHITE_BALANCE_FLUORESCENT
 = 3,

692 
	mV4L2_WHITE_BALANCE_FLUORESCENT_H
 = 4,

693 
	mV4L2_WHITE_BALANCE_HORIZON
 = 5,

694 
	mV4L2_WHITE_BALANCE_DAYLIGHT
 = 6,

695 
	mV4L2_WHITE_BALANCE_FLASH
 = 7,

696 
	mV4L2_WHITE_BALANCE_CLOUDY
 = 8,

697 
	mV4L2_WHITE_BALANCE_SHADE
 = 9,

700 
	#V4L2_CID_WIDE_DYNAMIC_RANGE
 (
V4L2_CID_CAMERA_CLASS_BASE
+21)

	)

701 
	#V4L2_CID_IMAGE_STABILIZATION
 (
V4L2_CID_CAMERA_CLASS_BASE
+22)

	)

703 
	#V4L2_CID_ISO_SENSITIVITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+23)

	)

704 
	#V4L2_CID_ISO_SENSITIVITY_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+24)

	)

705 
	ev4l2_iso_£nsôivôy_auto_ty≥
 {

706 
	mV4L2_ISO_SENSITIVITY_MANUAL
 = 0,

707 
	mV4L2_ISO_SENSITIVITY_AUTO
 = 1,

710 
	#V4L2_CID_EXPOSURE_METERING
 (
V4L2_CID_CAMERA_CLASS_BASE
+25)

	)

711 
	ev4l2_exposuª_mëîög
 {

712 
	mV4L2_EXPOSURE_METERING_AVERAGE
 = 0,

713 
	mV4L2_EXPOSURE_METERING_CENTER_WEIGHTED
 = 1,

714 
	mV4L2_EXPOSURE_METERING_SPOT
 = 2,

715 
	mV4L2_EXPOSURE_METERING_MATRIX
 = 3,

718 
	#V4L2_CID_SCENE_MODE
 (
V4L2_CID_CAMERA_CLASS_BASE
+26)

	)

719 
	ev4l2_s˚√_mode
 {

720 
	mV4L2_SCENE_MODE_NONE
 = 0,

721 
	mV4L2_SCENE_MODE_BACKLIGHT
 = 1,

722 
	mV4L2_SCENE_MODE_BEACH_SNOW
 = 2,

723 
	mV4L2_SCENE_MODE_CANDLE_LIGHT
 = 3,

724 
	mV4L2_SCENE_MODE_DAWN_DUSK
 = 4,

725 
	mV4L2_SCENE_MODE_FALL_COLORS
 = 5,

726 
	mV4L2_SCENE_MODE_FIREWORKS
 = 6,

727 
	mV4L2_SCENE_MODE_LANDSCAPE
 = 7,

728 
	mV4L2_SCENE_MODE_NIGHT
 = 8,

729 
	mV4L2_SCENE_MODE_PARTY_INDOOR
 = 9,

730 
	mV4L2_SCENE_MODE_PORTRAIT
 = 10,

731 
	mV4L2_SCENE_MODE_SPORTS
 = 11,

732 
	mV4L2_SCENE_MODE_SUNSET
 = 12,

733 
	mV4L2_SCENE_MODE_TEXT
 = 13,

736 
	#V4L2_CID_3A_LOCK
 (
V4L2_CID_CAMERA_CLASS_BASE
+27)

	)

737 
	#V4L2_LOCK_EXPOSURE
 (1 << 0)

	)

738 
	#V4L2_LOCK_WHITE_BALANCE
 (1 << 1)

	)

739 
	#V4L2_LOCK_FOCUS
 (1 << 2)

	)

741 
	#V4L2_CID_AUTO_FOCUS_START
 (
V4L2_CID_CAMERA_CLASS_BASE
+28)

	)

742 
	#V4L2_CID_AUTO_FOCUS_STOP
 (
V4L2_CID_CAMERA_CLASS_BASE
+29)

	)

743 
	#V4L2_CID_AUTO_FOCUS_STATUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+30)

	)

744 
	#V4L2_AUTO_FOCUS_STATUS_IDLE
 (0 << 0)

	)

745 
	#V4L2_AUTO_FOCUS_STATUS_BUSY
 (1 << 0)

	)

746 
	#V4L2_AUTO_FOCUS_STATUS_REACHED
 (1 << 1)

	)

747 
	#V4L2_AUTO_FOCUS_STATUS_FAILED
 (1 << 2)

	)

749 
	#V4L2_CID_AUTO_FOCUS_RANGE
 (
V4L2_CID_CAMERA_CLASS_BASE
+31)

	)

750 
	ev4l2_auto_focus_ønge
 {

751 
	mV4L2_AUTO_FOCUS_RANGE_AUTO
 = 0,

752 
	mV4L2_AUTO_FOCUS_RANGE_NORMAL
 = 1,

753 
	mV4L2_AUTO_FOCUS_RANGE_MACRO
 = 2,

754 
	mV4L2_AUTO_FOCUS_RANGE_INFINITY
 = 3,

757 
	#V4L2_CID_PAN_SPEED
 (
V4L2_CID_CAMERA_CLASS_BASE
+32)

	)

758 
	#V4L2_CID_TILT_SPEED
 (
V4L2_CID_CAMERA_CLASS_BASE
+33)

	)

762 
	#V4L2_CID_FM_TX_CLASS_BASE
 (
V4L2_CTRL_CLASS_FM_TX
 | 0x900)

	)

763 
	#V4L2_CID_FM_TX_CLASS
 (
V4L2_CTRL_CLASS_FM_TX
 | 1)

	)

765 
	#V4L2_CID_RDS_TX_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 1)

	)

766 
	#V4L2_CID_RDS_TX_PI
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 2)

	)

767 
	#V4L2_CID_RDS_TX_PTY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 3)

	)

768 
	#V4L2_CID_RDS_TX_PS_NAME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 5)

	)

769 
	#V4L2_CID_RDS_TX_RADIO_TEXT
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 6)

	)

770 
	#V4L2_CID_RDS_TX_MONO_STEREO
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 7)

	)

771 
	#V4L2_CID_RDS_TX_ARTIFICIAL_HEAD
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 8)

	)

772 
	#V4L2_CID_RDS_TX_COMPRESSED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 9)

	)

773 
	#V4L2_CID_RDS_TX_DYNAMIC_PTY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 10)

	)

774 
	#V4L2_CID_RDS_TX_TRAFFIC_ANNOUNCEMENT
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 11)

	)

775 
	#V4L2_CID_RDS_TX_TRAFFIC_PROGRAM
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 12)

	)

776 
	#V4L2_CID_RDS_TX_MUSIC_SPEECH
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 13)

	)

777 
	#V4L2_CID_RDS_TX_ALT_FREQS_ENABLE
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 14)

	)

778 
	#V4L2_CID_RDS_TX_ALT_FREQS
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 15)

	)

780 
	#V4L2_CID_AUDIO_LIMITER_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 64)

	)

781 
	#V4L2_CID_AUDIO_LIMITER_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 65)

	)

782 
	#V4L2_CID_AUDIO_LIMITER_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 66)

	)

784 
	#V4L2_CID_AUDIO_COMPRESSION_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 80)

	)

785 
	#V4L2_CID_AUDIO_COMPRESSION_GAIN
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 81)

	)

786 
	#V4L2_CID_AUDIO_COMPRESSION_THRESHOLD
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 82)

	)

787 
	#V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 83)

	)

788 
	#V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 84)

	)

790 
	#V4L2_CID_PILOT_TONE_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 96)

	)

791 
	#V4L2_CID_PILOT_TONE_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 97)

	)

792 
	#V4L2_CID_PILOT_TONE_FREQUENCY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 98)

	)

794 
	#V4L2_CID_TUNE_PREEMPHASIS
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 112)

	)

795 
	ev4l2_¥ìmphasis
 {

796 
	mV4L2_PREEMPHASIS_DISABLED
 = 0,

797 
	mV4L2_PREEMPHASIS_50_uS
 = 1,

798 
	mV4L2_PREEMPHASIS_75_uS
 = 2,

800 
	#V4L2_CID_TUNE_POWER_LEVEL
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 113)

	)

801 
	#V4L2_CID_TUNE_ANTENNA_CAPACITOR
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 114)

	)

806 
	#V4L2_CID_FLASH_CLASS_BASE
 (
V4L2_CTRL_CLASS_FLASH
 | 0x900)

	)

807 
	#V4L2_CID_FLASH_CLASS
 (
V4L2_CTRL_CLASS_FLASH
 | 1)

	)

809 
	#V4L2_CID_FLASH_LED_MODE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 1)

	)

810 
	ev4l2_Êash_Àd_mode
 {

811 
	mV4L2_FLASH_LED_MODE_NONE
,

812 
	mV4L2_FLASH_LED_MODE_FLASH
,

813 
	mV4L2_FLASH_LED_MODE_TORCH
,

816 
	#V4L2_CID_FLASH_STROBE_SOURCE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 2)

	)

817 
	ev4l2_Êash_°robe_sour˚
 {

818 
	mV4L2_FLASH_STROBE_SOURCE_SOFTWARE
,

819 
	mV4L2_FLASH_STROBE_SOURCE_EXTERNAL
,

822 
	#V4L2_CID_FLASH_STROBE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 3)

	)

823 
	#V4L2_CID_FLASH_STROBE_STOP
 (
V4L2_CID_FLASH_CLASS_BASE
 + 4)

	)

824 
	#V4L2_CID_FLASH_STROBE_STATUS
 (
V4L2_CID_FLASH_CLASS_BASE
 + 5)

	)

826 
	#V4L2_CID_FLASH_TIMEOUT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 6)

	)

827 
	#V4L2_CID_FLASH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 7)

	)

828 
	#V4L2_CID_FLASH_TORCH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 8)

	)

829 
	#V4L2_CID_FLASH_INDICATOR_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 9)

	)

831 
	#V4L2_CID_FLASH_FAULT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 10)

	)

832 
	#V4L2_FLASH_FAULT_OVER_VOLTAGE
 (1 << 0)

	)

833 
	#V4L2_FLASH_FAULT_TIMEOUT
 (1 << 1)

	)

834 
	#V4L2_FLASH_FAULT_OVER_TEMPERATURE
 (1 << 2)

	)

835 
	#V4L2_FLASH_FAULT_SHORT_CIRCUIT
 (1 << 3)

	)

836 
	#V4L2_FLASH_FAULT_OVER_CURRENT
 (1 << 4)

	)

837 
	#V4L2_FLASH_FAULT_INDICATOR
 (1 << 5)

	)

838 
	#V4L2_FLASH_FAULT_UNDER_VOLTAGE
 (1 << 6)

	)

839 
	#V4L2_FLASH_FAULT_INPUT_VOLTAGE
 (1 << 7)

	)

840 
	#V4L2_FLASH_FAULT_LED_OVER_TEMPERATURE
 (1 << 8)

	)

842 
	#V4L2_CID_FLASH_CHARGE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 11)

	)

843 
	#V4L2_CID_FLASH_READY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 12)

	)

848 
	#V4L2_CID_JPEG_CLASS_BASE
 (
V4L2_CTRL_CLASS_JPEG
 | 0x900)

	)

849 
	#V4L2_CID_JPEG_CLASS
 (
V4L2_CTRL_CLASS_JPEG
 | 1)

	)

851 
	#V4L2_CID_JPEG_CHROMA_SUBSAMPLING
 (
V4L2_CID_JPEG_CLASS_BASE
 + 1)

	)

852 
	ev4l2_j≥g_chroma_subßm∂ög
 {

853 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_444
 = 0,

854 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_422
 = 1,

855 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_420
 = 2,

856 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_411
 = 3,

857 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_410
 = 4,

858 
	mV4L2_JPEG_CHROMA_SUBSAMPLING_GRAY
 = 5,

860 
	#V4L2_CID_JPEG_RESTART_INTERVAL
 (
V4L2_CID_JPEG_CLASS_BASE
 + 2)

	)

861 
	#V4L2_CID_JPEG_COMPRESSION_QUALITY
 (
V4L2_CID_JPEG_CLASS_BASE
 + 3)

	)

863 
	#V4L2_CID_JPEG_ACTIVE_MARKER
 (
V4L2_CID_JPEG_CLASS_BASE
 + 4)

	)

864 
	#V4L2_JPEG_ACTIVE_MARKER_APP0
 (1 << 0)

	)

865 
	#V4L2_JPEG_ACTIVE_MARKER_APP1
 (1 << 1)

	)

866 
	#V4L2_JPEG_ACTIVE_MARKER_COM
 (1 << 16)

	)

867 
	#V4L2_JPEG_ACTIVE_MARKER_DQT
 (1 << 17)

	)

868 
	#V4L2_JPEG_ACTIVE_MARKER_DHT
 (1 << 18)

	)

872 
	#V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 (
V4L2_CTRL_CLASS_IMAGE_SOURCE
 | 0x900)

	)

873 
	#V4L2_CID_IMAGE_SOURCE_CLASS
 (
V4L2_CTRL_CLASS_IMAGE_SOURCE
 | 1)

	)

875 
	#V4L2_CID_VBLANK
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 1)

	)

876 
	#V4L2_CID_HBLANK
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 2)

	)

877 
	#V4L2_CID_ANALOGUE_GAIN
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 3)

	)

878 
	#V4L2_CID_TEST_PATTERN_RED
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 4)

	)

879 
	#V4L2_CID_TEST_PATTERN_GREENR
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 5)

	)

880 
	#V4L2_CID_TEST_PATTERN_BLUE
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 6)

	)

881 
	#V4L2_CID_TEST_PATTERN_GREENB
 (
V4L2_CID_IMAGE_SOURCE_CLASS_BASE
 + 7)

	)

886 
	#V4L2_CID_IMAGE_PROC_CLASS_BASE
 (
V4L2_CTRL_CLASS_IMAGE_PROC
 | 0x900)

	)

887 
	#V4L2_CID_IMAGE_PROC_CLASS
 (
V4L2_CTRL_CLASS_IMAGE_PROC
 | 1)

	)

889 
	#V4L2_CID_LINK_FREQ
 (
V4L2_CID_IMAGE_PROC_CLASS_BASE
 + 1)

	)

890 
	#V4L2_CID_PIXEL_RATE
 (
V4L2_CID_IMAGE_PROC_CLASS_BASE
 + 2)

	)

891 
	#V4L2_CID_TEST_PATTERN
 (
V4L2_CID_IMAGE_PROC_CLASS_BASE
 + 3)

	)

895 
	#V4L2_CID_DV_CLASS_BASE
 (
V4L2_CTRL_CLASS_DV
 | 0x900)

	)

896 
	#V4L2_CID_DV_CLASS
 (
V4L2_CTRL_CLASS_DV
 | 1)

	)

898 
	#V4L2_CID_DV_TX_HOTPLUG
 (
V4L2_CID_DV_CLASS_BASE
 + 1)

	)

899 
	#V4L2_CID_DV_TX_RXSENSE
 (
V4L2_CID_DV_CLASS_BASE
 + 2)

	)

900 
	#V4L2_CID_DV_TX_EDID_PRESENT
 (
V4L2_CID_DV_CLASS_BASE
 + 3)

	)

901 
	#V4L2_CID_DV_TX_MODE
 (
V4L2_CID_DV_CLASS_BASE
 + 4)

	)

902 
	ev4l2_dv_tx_mode
 {

903 
	mV4L2_DV_TX_MODE_DVI_D
 = 0,

904 
	mV4L2_DV_TX_MODE_HDMI
 = 1,

906 
	#V4L2_CID_DV_TX_RGB_RANGE
 (
V4L2_CID_DV_CLASS_BASE
 + 5)

	)

907 
	ev4l2_dv_rgb_ønge
 {

908 
	mV4L2_DV_RGB_RANGE_AUTO
 = 0,

909 
	mV4L2_DV_RGB_RANGE_LIMITED
 = 1,

910 
	mV4L2_DV_RGB_RANGE_FULL
 = 2,

913 
	#V4L2_CID_DV_RX_POWER_PRESENT
 (
V4L2_CID_DV_CLASS_BASE
 + 100)

	)

914 
	#V4L2_CID_DV_RX_RGB_RANGE
 (
V4L2_CID_DV_CLASS_BASE
 + 101)

	)

916 
	#V4L2_CID_FM_RX_CLASS_BASE
 (
V4L2_CTRL_CLASS_FM_RX
 | 0x900)

	)

917 
	#V4L2_CID_FM_RX_CLASS
 (
V4L2_CTRL_CLASS_FM_RX
 | 1)

	)

919 
	#V4L2_CID_TUNE_DEEMPHASIS
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 1)

	)

920 
	ev4l2_dìmphasis
 {

921 
	mV4L2_DEEMPHASIS_DISABLED
 = 
V4L2_PREEMPHASIS_DISABLED
,

922 
	mV4L2_DEEMPHASIS_50_uS
 = 
V4L2_PREEMPHASIS_50_uS
,

923 
	mV4L2_DEEMPHASIS_75_uS
 = 
V4L2_PREEMPHASIS_75_uS
,

926 
	#V4L2_CID_RDS_RECEPTION
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 2)

	)

927 
	#V4L2_CID_RDS_RX_PTY
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 3)

	)

928 
	#V4L2_CID_RDS_RX_PS_NAME
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 4)

	)

929 
	#V4L2_CID_RDS_RX_RADIO_TEXT
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 5)

	)

930 
	#V4L2_CID_RDS_RX_TRAFFIC_ANNOUNCEMENT
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 6)

	)

931 
	#V4L2_CID_RDS_RX_TRAFFIC_PROGRAM
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 7)

	)

932 
	#V4L2_CID_RDS_RX_MUSIC_SPEECH
 (
V4L2_CID_FM_RX_CLASS_BASE
 + 8)

	)

934 
	#V4L2_CID_RF_TUNER_CLASS_BASE
 (
V4L2_CTRL_CLASS_RF_TUNER
 | 0x900)

	)

935 
	#V4L2_CID_RF_TUNER_CLASS
 (
V4L2_CTRL_CLASS_RF_TUNER
 | 1)

	)

937 
	#V4L2_CID_RF_TUNER_BANDWIDTH_AUTO
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 11)

	)

938 
	#V4L2_CID_RF_TUNER_BANDWIDTH
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 12)

	)

939 
	#V4L2_CID_RF_TUNER_RF_GAIN
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 32)

	)

940 
	#V4L2_CID_RF_TUNER_LNA_GAIN_AUTO
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 41)

	)

941 
	#V4L2_CID_RF_TUNER_LNA_GAIN
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 42)

	)

942 
	#V4L2_CID_RF_TUNER_MIXER_GAIN_AUTO
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 51)

	)

943 
	#V4L2_CID_RF_TUNER_MIXER_GAIN
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 52)

	)

944 
	#V4L2_CID_RF_TUNER_IF_GAIN_AUTO
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 61)

	)

945 
	#V4L2_CID_RF_TUNER_IF_GAIN
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 62)

	)

946 
	#V4L2_CID_RF_TUNER_PLL_LOCK
 (
V4L2_CID_RF_TUNER_CLASS_BASE
 + 91)

	)

950 
	#V4L2_CID_DETECT_CLASS_BASE
 (
V4L2_CTRL_CLASS_DETECT
 | 0x900)

	)

951 
	#V4L2_CID_DETECT_CLASS
 (
V4L2_CTRL_CLASS_DETECT
 | 1)

	)

953 
	#V4L2_CID_DETECT_MD_MODE
 (
V4L2_CID_DETECT_CLASS_BASE
 + 1)

	)

954 
	ev4l2_dëe˘_md_mode
 {

955 
	mV4L2_DETECT_MD_MODE_DISABLED
 = 0,

956 
	mV4L2_DETECT_MD_MODE_GLOBAL
 = 1,

957 
	mV4L2_DETECT_MD_MODE_THRESHOLD_GRID
 = 2,

958 
	mV4L2_DETECT_MD_MODE_REGION_GRID
 = 3,

960 
	#V4L2_CID_DETECT_MD_GLOBAL_THRESHOLD
 (
V4L2_CID_DETECT_CLASS_BASE
 + 2)

	)

961 
	#V4L2_CID_DETECT_MD_THRESHOLD_GRID
 (
V4L2_CID_DETECT_CLASS_BASE
 + 3)

	)

962 
	#V4L2_CID_DETECT_MD_REGION_GRID
 (
V4L2_CID_DETECT_CLASS_BASE
 + 4)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/linux/stddef.h

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
29
677
capture.c
v4l2grab.c
/usr/include/assert.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/linux/videodev2.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/ctype.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/types.h
/usr/include/linux/v4l2-common.h
/usr/include/linux/v4l2-controls.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/endian.h
/usr/include/linux/posix_types.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/wctype.h
